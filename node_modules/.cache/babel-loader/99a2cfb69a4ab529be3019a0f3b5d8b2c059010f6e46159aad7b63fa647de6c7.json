{"ast":null,"code":"var _jsxFileName = \"/Users/a1/projects/with mentor practice/kanban-board/src/components/Column.js\",\n  _s = $RefreshSig$();\nimport { SortableContext, useSortable } from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport '../blocks/column/column.css';\nimport Button from './Button';\nimport { useMemo, useState } from 'react';\nimport Task from './Task';\nimport { selectUser } from '../context/user';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Column({\n  columnID,\n  name,\n  handleClick,\n  updateColumnName,\n  handleAddTask,\n  tasks,\n  handleDeleteTask,\n  updateTask\n}) {\n  _s();\n  let {\n    id\n  } = useSelector(selectUser); //initially check isAnyUserLogIN\n\n  const [editMode, setEditMode] = useState(false);\n  const [input, setInput] = useState(name);\n  const tasksIds = useMemo(() => {\n    return tasks.map(task => task.id);\n  }, [tasks]);\n  const {\n    setNodeRef,\n    attributes,\n    listeners,\n    transform,\n    transition\n  } = useSortable({\n    id: columnID,\n    data: {\n      type: 'column',\n      name: name,\n      id: columnID\n    }\n    // disabled:editMode,\n  });\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"column\",\n    ref: setNodeRef,\n    style: style,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: id,\n      className: \"column__header\",\n      ...attributes,\n      ...listeners,\n      onClick: onHeaderClick,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column__header-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column__tasks-number\",\n          children: tasks.length || 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), editMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          autoFocus: true,\n          onBlur: () => {\n            setEditMode(false);\n            setInput(name);\n          },\n          onChange: handleChange,\n          value: input,\n          onKeyDown: handleKeyDown,\n          className: \"column__input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 23\n        }, this) : `${name}`]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        handleClick: handleClick,\n        type: \"delete\",\n        columnORtaskID: columnID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column__content\",\n      children: /*#__PURE__*/_jsxDEV(SortableContext, {\n        items: tasksIds,\n        children: tasks.map(task => {\n          return /*#__PURE__*/_jsxDEV(Task, {\n            task: task,\n            handleDeleteTask: handleDeleteTask,\n            updateTask: updateTask\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      content: \"Add task\",\n      handleClick: handleAddTask,\n      type: \"add\",\n      columnORtaskID: columnID //column id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n  function onHeaderClick() {\n    setEditMode(true);\n  }\n  function handleChange(e) {\n    setInput(e.target.value);\n  }\n  function handleKeyDown(e) {\n    if (e.key !== 'Enter') return;\n    updateColumnName({\n      userID: id,\n      input,\n      id: columnID\n    });\n    setEditMode(false);\n  }\n}\n_s(Column, \"ySNLDq8G7PXmZaraekusT0vxSk4=\", false, function () {\n  return [useSelector, useSortable];\n});\n_c = Column;\nvar _c;\n$RefreshReg$(_c, \"Column\");","map":{"version":3,"names":["SortableContext","useSortable","CSS","Button","useMemo","useState","Task","selectUser","useSelector","jsxDEV","_jsxDEV","Column","columnID","name","handleClick","updateColumnName","handleAddTask","tasks","handleDeleteTask","updateTask","_s","id","editMode","setEditMode","input","setInput","tasksIds","map","task","setNodeRef","attributes","listeners","transform","transition","data","type","style","Transform","toString","className","ref","children","onClick","onHeaderClick","length","fileName","_jsxFileName","lineNumber","columnNumber","autoFocus","onBlur","onChange","handleChange","value","onKeyDown","handleKeyDown","columnORtaskID","items","content","e","target","key","userID","_c","$RefreshReg$"],"sources":["/Users/a1/projects/with mentor practice/kanban-board/src/components/Column.js"],"sourcesContent":["import { SortableContext, useSortable } from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport '../blocks/column/column.css';\nimport Button from './Button';\nimport { useMemo, useState } from 'react';\nimport Task from './Task';\n\nimport { selectUser } from '../context/user';\nimport { useSelector } from 'react-redux';\n\nexport default function Column({columnID, name, handleClick, updateColumnName, handleAddTask, tasks, handleDeleteTask, updateTask}) {\n\n  let {id}= useSelector(selectUser); //initially check isAnyUserLogIN\n\n  const [editMode, setEditMode] = useState(false);\n  const [input, setInput] = useState(name);\n  \n  const tasksIds = useMemo(() => {\n    return tasks.map(task => task.id)\n  }, [tasks])\n  \n  const {setNodeRef, attributes, listeners, transform, transition} = useSortable({\n    id:columnID,\n    data: {\n      type: 'column',\n      name: name,\n      id:columnID,\n    },\n    // disabled:editMode,\n  });\n\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n  };\n\n  return (\n    <div className='column' ref={setNodeRef} style={style}>\n      <div id={id} className='column__header' {...attributes} {...listeners} onClick={onHeaderClick}>\n        <div className='column__header-container' >\n          <div className='column__tasks-number'>{tasks.length || 0}</div>\n          {editMode ? <input\n          type='text' \n          autoFocus \n          onBlur={()=>{\n            setEditMode(false)\n            setInput(name)\n          }}\n          onChange={handleChange}\n          value={input}\n          onKeyDown={handleKeyDown}\n          className='column__input'\n          /> : `${name}`}\n        </div>\n        \n        <Button\n          handleClick={handleClick}\n          type='delete'\n          columnORtaskID={columnID}\n        />\n      </div>\n      <div className='column__content'>\n        <SortableContext items={tasksIds}>\n          {tasks.map( task => {\n            return (\n              <Task key={task.id} task={task} handleDeleteTask={handleDeleteTask} updateTask={updateTask}/>\n            )\n          })}\n        </SortableContext>\n       \n      </div>\n      <Button \n      content='Add task'\n      handleClick={handleAddTask}\n      type='add'\n      columnORtaskID={columnID} //column id\n      />\n    </div>\n  )\n\n  function onHeaderClick() {\n    setEditMode(true);\n  }\n  function handleChange(e) {\n    setInput(e.target.value)\n  }\n  function handleKeyDown(e) {\n    if (e.key !== 'Enter') return\n    updateColumnName({userID:id, input, id:columnID});\n    setEditMode(false)\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}