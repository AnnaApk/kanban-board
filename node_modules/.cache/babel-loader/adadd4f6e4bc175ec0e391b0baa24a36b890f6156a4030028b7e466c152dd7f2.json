{"ast":null,"code":"var _jsxFileName = \"/Users/a1/projects/with mentor practice/kanban-board/src/components/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useMemo, useState } from 'react';\nimport '../blocks/app/app.css';\nimport Header from './Header';\nimport Button from './Button';\nimport Column from './Column';\nimport Footer from './Footer';\nimport Popup from './Popup';\nimport { DndContext, PointerSensor, useSensor, useSensors } from '@dnd-kit/core';\nimport { SortableContext, arrayMove } from '@dnd-kit/sortable';\nimport { logIn, logOut, selectUser } from '../context/user';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\nimport { creatUser, logInUser, signOutUser, getData } from '../api/firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const {\n    user\n  } = useSelector(selectUser); // initially check isAnyUserLogIN\n\n  const [columns, setColumns] = useState([]);\n  const [tasks, setTasks] = useState(JSON.parse(localStorage.getItem('kanban-board-tasks')) || []);\n  console.log(columns);\n  const [isOpen, setIsOpen] = useState(false); /// popup\n  const [isOpenLogIn, setIsOpenLogIn] = useState(false);\n  const [isOpenNewAccount, setIsOpenNewAccount] = useState(false);\n  let handleClickAddColumn = () => {\n    setColumns([...columns, {\n      name: 'Column ' + (columns.length + 1),\n      id: Math.ceil(Math.random() * 100000)\n    }]);\n    // localStorage.setItem('kanban-board', JSON.stringify(columns));\n  };\n  let handleClickDeleteColumn = id => {\n    const filteredColumns = columns.filter(el => el.id !== id);\n    const filteredTasks = tasks.filter(task => task.idColumn !== id);\n    setColumns(filteredColumns);\n    setTasks(filteredTasks);\n  };\n  let updateColumnName = ({\n    id,\n    input\n  }) => {\n    const update = columns.map(el => {\n      if (el.id !== id) return el;\n      return {\n        ...el,\n        name: input\n      };\n    });\n    setColumns(update);\n  };\n  let handleAddTask = id => {\n    const newTask = {\n      idColumn: id,\n      id: Math.ceil(Math.random() * 100000),\n      content: 'Task ' + (tasks.length + 1)\n    };\n    setTasks([...tasks, newTask]);\n  };\n  let handleDeleteTask = id => {\n    const filteredTasks = tasks.filter(task => task.id !== id);\n    setTasks(filteredTasks);\n  };\n  let updateTask = ({\n    id,\n    input\n  }) => {\n    const updatedTasks = tasks.map(task => {\n      if (task.id !== id) return task;\n      return {\n        ...task,\n        content: input\n      };\n    });\n    setTasks(updatedTasks);\n  };\n\n  /// dnd-kit \n  const columnsID = useMemo(() => columns.map(el => el.id), [columns]);\n  const [activeColumn, setActiveColumn] = useState(null);\n  const [activeTask, setActiveTask] = useState(null);\n  //managing the area from where dnd starts to work, just move for this 'distance', to provide work other buttons\n  const sensors = useSensors(useSensor(PointerSensor, {\n    activationConstraint: {\n      distance: 3\n    }\n  }));\n  function onDragStart(event) {\n    var _event$active$data$cu, _event$active$data$cu2;\n    if (((_event$active$data$cu = event.active.data.current) === null || _event$active$data$cu === void 0 ? void 0 : _event$active$data$cu.type) === 'column') {\n      setActiveColumn(event.active.data.current.id);\n      return;\n    }\n    if (((_event$active$data$cu2 = event.active.data.current) === null || _event$active$data$cu2 === void 0 ? void 0 : _event$active$data$cu2.type) === 'task') {\n      setActiveTask(event.active.data.current.task);\n      return;\n    }\n  }\n  function onDragEnd(event) {\n    setActiveTask(null);\n    setActiveColumn(null);\n    const {\n      active,\n      over\n    } = event; /// {active, over}\n\n    if (!over) return;\n    const activeId = active.id; /// active\n    const overId = over.id;\n    if (activeId === overId) return;\n    setColumns(columns => {\n      const draggindColumn = columns.findIndex(el => el.id === activeId);\n      const overColumn = columns.findIndex(el => el.id === overId);\n      return arrayMove(columns, draggindColumn, overColumn);\n    });\n  }\n  function onDragOver(event) {\n    const {\n      active,\n      over\n    } = event; /// {active, over}\n\n    if (!over) return;\n    const activeId = active.id; /// active\n    const overId = over.id;\n    if (activeId === overId) return;\n    if (!activeTask) return;\n    const isActiveTask = active.data.current.type === 'task';\n    const isOverTask = over.data.current.type === 'task';\n    /// dropping a task over another task\n    if (isActiveTask && isOverTask) {\n      setTasks(tasks => {\n        const activeIndex = tasks.findIndex(el => el.id === activeId);\n        const overIndex = tasks.findIndex(el => el.id === overId);\n        tasks[activeIndex].idColumn = tasks[overIndex].idColumn;\n        return arrayMove(tasks, activeIndex, overIndex);\n      });\n    }\n    /// dropping a task over am ampty other column\n    const isOverColumn = over.data.current.type === 'column';\n    setActiveColumn(null);\n    if (isActiveTask && isOverColumn) {\n      setTasks(tasks => {\n        const activeIndex = tasks.findIndex(el => el.id === activeId);\n        tasks[activeIndex].idColumn = overId;\n        return arrayMove(tasks, activeIndex, activeIndex);\n      });\n    }\n  }\n  /// dnd-kit end\n\n  useEffect(() => {\n    if (!user) localStorage.setItem('kanban-board-columns', JSON.stringify(columns));\n  }, [columns, user]);\n  useEffect(() => {\n    localStorage.setItem('kanban-board-tasks', JSON.stringify(tasks));\n  }, [tasks]);\n  const dispatch = useDispatch();\n  const auth = getAuth();\n  useEffect(() => {\n    onAuthStateChanged(auth, user => {\n      if (user) {\n        // User is signed in, see docs for a list of available properties\n        // https://firebase.google.com/docs/reference/js/auth.user\n        const uid = user.uid;\n        const email = user.email;\n        dispatch(logIn({\n          email: email,\n          id: uid\n        }));\n        setColumns(getInitialDataDB({\n          id: uid,\n          str: 'columns'\n        }));\n      } else {\n        // User is signed out\n        setColumns(getInitialDataLS('kanban-board-columns'));\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(DndContext, {\n    onDragStart: onDragStart,\n    onDragEnd: onDragEnd,\n    onDragOver: onDragOver,\n    sensors: sensors,\n    children: [user ? /*#__PURE__*/_jsxDEV(Header, {\n      handleLogOut: handleLogOut\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 15\n    }, this) : /*#__PURE__*/_jsxDEV(Popup, {\n      handleLogIn: handleLogIn,\n      handleCreatNewAccount: handleCreatNewAccount,\n      handleOpenClick: handleOpenClick,\n      handleCloseCLick: handleCloseCLick,\n      isOpen: isOpen,\n      isOpenLogIn: isOpenLogIn,\n      isOpenNewAccount: isOpenNewAccount,\n      handleOpenFormLogIn: handleOpenFormLogIn,\n      handleOpenFormNewAccount: handleOpenFormNewAccount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 56\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(SortableContext, {\n        items: columnsID,\n        children: columns.map(el => {\n          return /*#__PURE__*/_jsxDEV(Column, {\n            id: el.id,\n            name: el.name,\n            handleClick: handleClickDeleteColumn,\n            updateColumnName: updateColumnName,\n            handleAddTask: handleAddTask,\n            tasks: tasks.filter(task => task.idColumn === el.id),\n            handleDeleteTask: handleDeleteTask,\n            updateTask: updateTask\n          }, el.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 18\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        content: \"Add column\",\n        handleClick: handleClickAddColumn,\n        type: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), \" \", activeColumn ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), \" \", /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n  function handleCreatNewAccount({\n    email,\n    password\n  }) {\n    creatUser({\n      email,\n      password\n    }).then(user => {\n      console.log(user);\n      setIsOpenLogIn(true);\n      setIsOpenNewAccount(false);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n  function handleLogIn({\n    email,\n    password\n  }) {\n    logInUser({\n      email,\n      password\n    }).then(user => {\n      setColumns([]);\n      setIsOpenLogIn(false);\n      setIsOpen(false);\n      if (user.user) {\n        localStorage.setItem('kanban-token', JSON.stringify(user.user.accessToken));\n        dispatch(logIn({\n          email: email,\n          id: user.user.uid\n        }));\n      }\n    }).catch(err => {\n      console.log('catch', err);\n    });\n  }\n  function handleLogOut() {\n    signOutUser().then(() => {\n      setColumns([]);\n      dispatch(logOut());\n    }).catch();\n  }\n  function handleOpenClick() {\n    setIsOpen(true);\n  }\n  function handleCloseCLick() {\n    setIsOpen(false);\n    setIsOpenLogIn(false);\n    setIsOpenNewAccount(false);\n  }\n  function handleOpenFormLogIn(e) {\n    e.preventDefault();\n    setIsOpenNewAccount(false);\n    setIsOpenLogIn(true);\n  }\n  function handleOpenFormNewAccount(e) {\n    e.preventDefault();\n    setIsOpenLogIn(false);\n    setIsOpenNewAccount(true);\n  }\n  function getInitialDataDB({\n    id,\n    str\n  }) {\n    /// 'columns'  'tasks'\n    return getData({\n      userID: id,\n      category: str\n    }).then(snapshot => {\n      if (snapshot.exists()) {\n        console.log(snapshot.val());\n        return snapshot.val();\n      } else {\n        console.log(\"No data available\");\n        return [];\n      }\n    }).catch();\n  }\n  function getInitialDataLS(str) {\n    /// 'kanban-board-columns' 'kanban-board-tasks'\n    return JSON.parse(localStorage.getItem(str));\n  }\n}\n_s(App, \"OUJVn2Zy8SHu3BaCWC8WbacEIww=\", false, function () {\n  return [useSelector, useSensors, useSensor, useDispatch];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useMemo","useState","Header","Button","Column","Footer","Popup","DndContext","PointerSensor","useSensor","useSensors","SortableContext","arrayMove","logIn","logOut","selectUser","useDispatch","useSelector","getAuth","onAuthStateChanged","creatUser","logInUser","signOutUser","getData","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","user","columns","setColumns","tasks","setTasks","JSON","parse","localStorage","getItem","console","log","isOpen","setIsOpen","isOpenLogIn","setIsOpenLogIn","isOpenNewAccount","setIsOpenNewAccount","handleClickAddColumn","name","length","id","Math","ceil","random","handleClickDeleteColumn","filteredColumns","filter","el","filteredTasks","task","idColumn","updateColumnName","input","update","map","handleAddTask","newTask","content","handleDeleteTask","updateTask","updatedTasks","columnsID","activeColumn","setActiveColumn","activeTask","setActiveTask","sensors","activationConstraint","distance","onDragStart","event","_event$active$data$cu","_event$active$data$cu2","active","data","current","type","onDragEnd","over","activeId","overId","draggindColumn","findIndex","overColumn","onDragOver","isActiveTask","isOverTask","activeIndex","overIndex","isOverColumn","setItem","stringify","dispatch","auth","uid","email","getInitialDataDB","str","getInitialDataLS","children","handleLogOut","fileName","_jsxFileName","lineNumber","columnNumber","handleLogIn","handleCreatNewAccount","handleOpenClick","handleCloseCLick","handleOpenFormLogIn","handleOpenFormNewAccount","className","items","handleClick","password","then","catch","err","accessToken","e","preventDefault","userID","category","snapshot","exists","val","_c","$RefreshReg$"],"sources":["/Users/a1/projects/with mentor practice/kanban-board/src/components/App.js"],"sourcesContent":["import { useEffect, useMemo, useState } from 'react';\nimport '../blocks/app/app.css';\nimport Header from './Header';\nimport Button from './Button';\nimport Column from './Column';\nimport Footer from './Footer';\nimport Popup from './Popup';\nimport { DndContext, PointerSensor, useSensor, useSensors } from '@dnd-kit/core';\nimport {SortableContext, arrayMove} from '@dnd-kit/sortable';\n\nimport { logIn, logOut, selectUser } from '../context/user';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\nimport { creatUser, logInUser, signOutUser, getData } from '../api/firebase';\n\nexport default function App() {\n\n  const {user} = useSelector(selectUser);  // initially check isAnyUserLogIN\n\n  const [columns, setColumns] = useState([]);\n  const [tasks, setTasks] = useState(JSON.parse(localStorage.getItem('kanban-board-tasks')) || []);\n\n  console.log(columns)\n\n  const [isOpen, setIsOpen] = useState(false); /// popup\n  const [isOpenLogIn, setIsOpenLogIn] = useState(false);\n  const [isOpenNewAccount, setIsOpenNewAccount] = useState(false);\n\n  let handleClickAddColumn = () => {\n    setColumns([...columns, {name: 'Column ' + (columns.length + 1), id: Math.ceil(Math.random()*100000)} ]);\n    // localStorage.setItem('kanban-board', JSON.stringify(columns));\n  }\n\n  let handleClickDeleteColumn = (id) => {\n    const filteredColumns = columns.filter( el => el.id !== id)\n    const filteredTasks = tasks.filter(task => task.idColumn !== id)\n    setColumns(filteredColumns)\n    setTasks(filteredTasks)\n  }\n\n  let updateColumnName = ({id, input}) => {\n    const update = columns.map(el => {\n      if (el.id !== id)  return el\n      return {...el, name:input}\n    })\n    setColumns(update)\n  }\n\n  let handleAddTask = (id) => {\n    const newTask = {\n      idColumn: id,\n      id: Math.ceil(Math.random()*100000),\n      content: 'Task ' + (tasks.length + 1),\n    }\n    setTasks([...tasks, newTask])\n  }\n\n  let handleDeleteTask = (id) => {\n    const filteredTasks = tasks.filter(task => task.id !== id)\n    setTasks(filteredTasks)\n  }\n\n  let updateTask = ({id, input}) => {\n    const updatedTasks = tasks.map(task => {\n      if (task.id !== id) return task\n      return {...task, content:input}\n    })\n    setTasks(updatedTasks)\n  }\n\n  /// dnd-kit \n  const columnsID = useMemo(() => columns.map(el => el.id), [columns]);\n  const [activeColumn, setActiveColumn] = useState(null);\n  const [activeTask, setActiveTask] = useState(null);\n  //managing the area from where dnd starts to work, just move for this 'distance', to provide work other buttons\n  const sensors = useSensors(useSensor(PointerSensor, {\n    activationConstraint: {\n      distance: 3,\n    }\n  }));\n\n  function onDragStart(event) {\n    if (event.active.data.current?.type === 'column') {\n      setActiveColumn(event.active.data.current.id)\n      return\n    }\n    if (event.active.data.current?.type === 'task') {\n      setActiveTask(event.active.data.current.task)\n      return\n    }\n  }\n  function onDragEnd(event) {\n    setActiveTask(null)\n    setActiveColumn(null)\n\n    const {active,over} = event; /// {active, over}\n\n    if (!over) return\n    \n    const activeId = active.id;  /// active\n    const overId = over.id;\n\n    if ( activeId === overId) return\n\n    setColumns(columns => {\n      const draggindColumn = columns.findIndex(el => el.id === activeId)\n      const overColumn = columns.findIndex(el => el.id === overId)\n      return arrayMove(columns, draggindColumn, overColumn)\n    })\n  }\n  function onDragOver(event) {\n    const {active,over} = event; /// {active, over}\n\n    if (!over) return\n    \n    const activeId = active.id;  /// active\n    const overId = over.id;\n\n    if ( activeId === overId) return\n\n    if (!activeTask) return\n\n    const isActiveTask = active.data.current.type === 'task'\n    const isOverTask = over.data.current.type === 'task'\n    /// dropping a task over another task\n    if (isActiveTask && isOverTask) {\n      setTasks(tasks => {\n        const activeIndex = tasks.findIndex(el => el.id === activeId)\n        const overIndex = tasks.findIndex(el => el.id === overId)\n\n        tasks[activeIndex].idColumn = tasks[overIndex].idColumn\n\n        return arrayMove(tasks, activeIndex, overIndex)\n      })\n    }\n    /// dropping a task over am ampty other column\n    const isOverColumn = over.data.current.type === 'column';\n    setActiveColumn(null)\n\n    if (isActiveTask && isOverColumn) {\n      setTasks(tasks => {\n        const activeIndex = tasks.findIndex(el => el.id === activeId)\n\n        tasks[activeIndex].idColumn = overId\n\n        return arrayMove(tasks, activeIndex, activeIndex)\n      })\n    }\n  }\n  /// dnd-kit end\n\n\n  useEffect(() => {\n    if (!user) localStorage.setItem('kanban-board-columns', JSON.stringify(columns));\n  }, [columns, user])\n  useEffect(() => {\n    localStorage.setItem('kanban-board-tasks', JSON.stringify(tasks));\n  }, [tasks])\n  const dispatch = useDispatch();\n  const auth = getAuth();\n  useEffect(() => {\n    onAuthStateChanged(auth, (user) => {\n      if (user) {\n        // User is signed in, see docs for a list of available properties\n        // https://firebase.google.com/docs/reference/js/auth.user\n        const uid = user.uid;\n        const email = user.email;\n        dispatch(logIn({email:email,id:uid}))\n        setColumns(getInitialDataDB({id:uid, str:'columns'}))\n      } else {   // User is signed out\n        setColumns(getInitialDataLS('kanban-board-columns'))\n      } \n    });\n  },[])\n\n  return (\n    <DndContext onDragStart={onDragStart} onDragEnd={onDragEnd} onDragOver={onDragOver} sensors={sensors}>\n\n      {user ? <Header handleLogOut={handleLogOut} /> : <Popup \n      handleLogIn={handleLogIn} \n      handleCreatNewAccount={handleCreatNewAccount} \n      handleOpenClick={handleOpenClick} \n      handleCloseCLick={handleCloseCLick} \n      isOpen={isOpen} \n      isOpenLogIn={isOpenLogIn} \n      isOpenNewAccount={isOpenNewAccount} \n      handleOpenFormLogIn={handleOpenFormLogIn} \n      handleOpenFormNewAccount={handleOpenFormNewAccount} />}\n\n      <div className=\"app\">\n        <SortableContext items={columnsID}>\n        {columns.map(el => {\n          return <Column\n            key={el.id}\n            id={el.id}\n            name={el.name}\n            handleClick={handleClickDeleteColumn}\n            updateColumnName={updateColumnName}\n            handleAddTask={handleAddTask}\n            tasks={tasks.filter(task => task.idColumn === el.id )}\n            handleDeleteTask={handleDeleteTask}\n            updateTask={updateTask}\n          />\n        })}\n        </SortableContext>\n        \n        <Button   \n          content='Add column'\n          handleClick={handleClickAddColumn}\n          type='add'\n        />\n\n      </div>\n      {/* patch */} {activeColumn ? <></> : <></>} {/* patch end */}\n      <Footer />\n    </DndContext>\n  );\n\n  function handleCreatNewAccount({email,password}) {\n    creatUser({email, password})\n    .then(user => {\n      console.log(user)\n      setIsOpenLogIn(true)\n      setIsOpenNewAccount(false)\n    })\n    .catch(err => {\n      console.log(err)\n    })\n  }\n  function handleLogIn({email,password}) {\n    logInUser({email, password})\n    .then(user => {\n      setColumns([])\n      setIsOpenLogIn(false)\n      setIsOpen(false)\n      if (user.user) {\n        localStorage.setItem('kanban-token', JSON.stringify(user.user.accessToken))\n        dispatch(logIn({email:email,id:user.user.uid}))\n      }\n    })\n    .catch(err => {\n      console.log('catch', err)\n    })\n  }\n  function handleLogOut() {\n    signOutUser()\n    .then(() => {\n      setColumns([])\n      dispatch(logOut())\n    })\n    .catch()\n  }\n  function handleOpenClick() {\n    setIsOpen(true);\n  }\n  function handleCloseCLick() {\n    setIsOpen(false);\n    setIsOpenLogIn(false);\n    setIsOpenNewAccount(false);\n  }\n  function handleOpenFormLogIn(e) {\n    e.preventDefault();\n    setIsOpenNewAccount(false)\n    setIsOpenLogIn(true)\n  }\n  function handleOpenFormNewAccount(e) {\n    e.preventDefault();\n    setIsOpenLogIn(false)\n    setIsOpenNewAccount(true)\n  }\n\n  function getInitialDataDB({id, str}) {  /// 'columns'  'tasks'\n    return  getData({userID:id, category:str})\n      .then(snapshot => {\n        if (snapshot.exists()) {\n          console.log(snapshot.val());\n          return snapshot.val()\n        } else {\n          console.log(\"No data available\");\n          return []\n        }\n      })\n      .catch() \n  }\n  function getInitialDataLS(str) {  /// 'kanban-board-columns' 'kanban-board-tasks'\n    return JSON.parse(localStorage.getItem(str));\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}