{"ast":null,"code":"var _jsxFileName = \"/Users/a1/projects/with mentor practice/kanban-board/src/components/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useMemo, useState } from 'react';\nimport '../blocks/app/app.css';\nimport Button from './Button';\nimport Column from './Column';\nimport { DndContext, PointerSensor, useSensor, useSensors } from '@dnd-kit/core';\nimport { SortableContext, arrayMove } from '@dnd-kit/sortable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [columns, setColumns] = useState(JSON.parse(localStorage.getItem('kanban-board-columns')) || []);\n  const [tasks, setTasks] = useState(JSON.parse(localStorage.getItem('kanban-board-tasks')) || []);\n  let handleClickAddColumn = () => {\n    setColumns([...columns, {\n      name: 'Column' + (columns.length + 1),\n      id: Math.ceil(Math.random() * 100000)\n    }]);\n    // localStorage.setItem('kanban-board', JSON.stringify(columns));\n  };\n  let handleClickDeleteColumn = id => {\n    let x = columns.filter(el => el.id !== id);\n    setColumns(x);\n  };\n  let updateColumnName = ({\n    id,\n    input\n  }) => {\n    const update = columns.map(el => {\n      if (el.id !== id) return el;\n      return {\n        ...el,\n        name: input\n      };\n    });\n    setColumns(update);\n  };\n  let handleAddTask = id => {\n    const newTask = {\n      idColumn: id,\n      id: Math.ceil(Math.random() * 100000),\n      content: 'Task ' + (tasks.length + 1)\n    };\n    setTasks([...tasks, newTask]);\n  };\n\n  /// dnd-kit \n  const columnsID = useMemo(() => columns.map(el => el.id), [columns]);\n  const [activeColumn, setActiveColumn] = useState(null);\n  //managing the area from where dnd starts to work, just move for this 'distance', to provide work other buttons\n  const sensors = useSensors(useSensor(PointerSensor, {\n    activationConstraint: {\n      distance: 3\n    }\n  }));\n  function onDragStart(event) {\n    var _event$active$data$cu;\n    if (((_event$active$data$cu = event.active.data.current) === null || _event$active$data$cu === void 0 ? void 0 : _event$active$data$cu.type) === 'column') {\n      setActiveColumn(event.active.data.current.id);\n    }\n    return;\n  }\n  function onDragEnd(event) {\n    const {\n      active,\n      over\n    } = event; /// {active, over}\n\n    if (!over) return;\n    const activeId = active.id; /// active\n    const overId = over.id;\n    if (activeId === overId) return;\n    setColumns(columns => {\n      const draggindColumn = columns.findIndex(el => el.id === activeId);\n      const overColumn = columns.findIndex(el => el.id === overId);\n      return arrayMove(columns, draggindColumn, overColumn);\n    });\n  }\n  /// dnd-kit end\n\n  useEffect(() => {\n    localStorage.setItem('kanban-board-columns', JSON.stringify(columns));\n  }, [columns]);\n  useEffect(() => {\n    localStorage.setItem('kanban-board-tasks', JSON.stringify(tasks));\n  }, [tasks]);\n  return /*#__PURE__*/_jsxDEV(DndContext, {\n    onDragStart: onDragStart,\n    onDragEnd: onDragEnd,\n    sensors: sensors,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(SortableContext, {\n        items: columnsID,\n        children: columns.map(el => {\n          return /*#__PURE__*/_jsxDEV(Column, {\n            id: el.id,\n            name: el.name,\n            handleClick: handleClickDeleteColumn,\n            updateColumnName: updateColumnName,\n            handleAddTask: handleAddTask,\n            tasks: tasks.filter(task => task.idColumn === el.id)\n          }, el.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 18\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        content: \"Add column\",\n        handleClick: handleClickAddColumn,\n        type: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), activeColumn ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4AdVEG3JwiwLHXiqDkyLlHEPnig=\", false, function () {\n  return [useSensors, useSensor];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useMemo","useState","Button","Column","DndContext","PointerSensor","useSensor","useSensors","SortableContext","arrayMove","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","columns","setColumns","JSON","parse","localStorage","getItem","tasks","setTasks","handleClickAddColumn","name","length","id","Math","ceil","random","handleClickDeleteColumn","x","filter","el","updateColumnName","input","update","map","handleAddTask","newTask","idColumn","content","columnsID","activeColumn","setActiveColumn","sensors","activationConstraint","distance","onDragStart","event","_event$active$data$cu","active","data","current","type","onDragEnd","over","activeId","overId","draggindColumn","findIndex","overColumn","setItem","stringify","children","className","items","handleClick","task","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/a1/projects/with mentor practice/kanban-board/src/components/App.js"],"sourcesContent":["import { useEffect, useMemo, useState } from 'react';\nimport '../blocks/app/app.css';\nimport Button from './Button';\nimport Column from './Column';\nimport { DndContext, PointerSensor, useSensor, useSensors } from '@dnd-kit/core';\nimport {SortableContext, arrayMove} from '@dnd-kit/sortable';\n\nfunction App() {\n\n  const [columns, setColumns] = useState(JSON.parse(localStorage.getItem('kanban-board-columns')) || []);\n  const [tasks, setTasks] = useState(JSON.parse(localStorage.getItem('kanban-board-tasks')) ||[]);\n\n  let handleClickAddColumn = () => {\n    setColumns([...columns, {name: 'Column' + (columns.length + 1), id: Math.ceil(Math.random()*100000)} ]);\n    // localStorage.setItem('kanban-board', JSON.stringify(columns));\n  }\n\n  let handleClickDeleteColumn = (id) => {\n    let x = columns.filter( el => el.id !== id)\n    setColumns(x)\n  }\n\n  let updateColumnName = ({id, input}) => {\n    const update = columns.map(el => {\n      if (el.id !== id)  return el\n      return {...el, name:input}\n    })\n    setColumns(update)\n  }\n\n  let handleAddTask = (id) => {\n    const newTask = {\n      idColumn: id,\n      id: Math.ceil(Math.random()*100000),\n      content: 'Task ' + (tasks.length + 1),\n    }\n    setTasks([...tasks, newTask])\n  }\n\n  /// dnd-kit \n  const columnsID = useMemo(() => columns.map(el => el.id), [columns]);\n  const [activeColumn, setActiveColumn] = useState(null);\n  //managing the area from where dnd starts to work, just move for this 'distance', to provide work other buttons\n  const sensors = useSensors(useSensor(PointerSensor, {\n    activationConstraint: {\n      distance: 3,\n    }\n  }));\n\n  function onDragStart(event) {\n    if (event.active.data.current?.type === 'column') {\n      setActiveColumn(event.active.data.current.id)\n    }\n    return\n  }\n  function onDragEnd(event) {\n    const {active,over} = event; /// {active, over}\n\n    if (!over) return\n    \n    const activeId = active.id;  /// active\n    const overId = over.id;\n\n    if ( activeId === overId) return\n\n    setColumns(columns => {\n      const draggindColumn = columns.findIndex(el => el.id === activeId)\n      const overColumn = columns.findIndex(el => el.id === overId)\n      return arrayMove(columns, draggindColumn, overColumn)\n    })\n  }\n  /// dnd-kit end\n\n  useEffect(() => {\n    localStorage.setItem('kanban-board-columns', JSON.stringify(columns));\n  }, [columns])\n  useEffect(() => {\n    localStorage.setItem('kanban-board-tasks', JSON.stringify(tasks));\n  }, [tasks])\n\n  return (\n    <DndContext onDragStart={onDragStart} onDragEnd={onDragEnd} sensors={sensors}>\n      <div className=\"app\">\n        <SortableContext items={columnsID}>\n        {columns.map(el => {\n          return <Column\n            key={el.id}\n            id={el.id}\n            name={el.name}\n            handleClick={handleClickDeleteColumn}\n            updateColumnName={updateColumnName}\n            handleAddTask={handleAddTask}\n            tasks={tasks.filter(task => task.idColumn === el.id )}\n          />\n        })}\n        </SortableContext>\n        \n        <Button   \n          content='Add column'\n          handleClick={handleClickAddColumn}\n          type='add'\n        />\n\n      </div>\n      {/* patch */}\n     {activeColumn ? <></> : <></>} \n     {/* patch end */}\n    </DndContext>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}