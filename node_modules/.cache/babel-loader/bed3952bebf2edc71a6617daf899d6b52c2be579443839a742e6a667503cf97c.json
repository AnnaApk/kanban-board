{"ast":null,"code":"var _jsxFileName = \"/Users/a1/projects/with mentor practice/kanban-board/src/components/Task.js\",\n  _s = $RefreshSig$();\nimport Button from \"./Button\";\nimport '../blocks/task/task.css';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Task({\n  task,\n  handleDeleteTask\n}) {\n  _s();\n  const {\n    content,\n    id\n  } = task;\n  const [editModeTask, setEditModeTask] = useState(false);\n  const [isMouseOver, setIsMouseOver] = useState(false);\n  let handleClick = () => {\n    setEditModeTask(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task\",\n    onClick: handleClick,\n    onMouseEnter: e => setIsMouseOver(true),\n    onMouseLeave: e => setIsMouseOver(false),\n    children: [editModeTask ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n      autoFocus: true,\n      onBlur: () => {\n        setEditModeTask(false);\n        // setInput(name)\n      },\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 24\n    }, this) : `${content}`, isMouseOver && /*#__PURE__*/_jsxDEV(Button, {\n      type: \"delete\",\n      id: id,\n      handleClick: handleDeleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(Task, \"Y9Yiad1NSXbI21DUlxU6xUL8zzk=\");\n_c = Task;\nvar _c;\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["Button","useState","jsxDEV","_jsxDEV","Task","task","handleDeleteTask","_s","content","id","editModeTask","setEditModeTask","isMouseOver","setIsMouseOver","handleClick","className","onClick","onMouseEnter","e","onMouseLeave","children","autoFocus","onBlur","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["/Users/a1/projects/with mentor practice/kanban-board/src/components/Task.js"],"sourcesContent":["import Button from \"./Button\";\nimport '../blocks/task/task.css';\nimport { useState } from \"react\";\n\nexport default function Task({task, handleDeleteTask}) {\n  const {content, id } = task;\n\n  const [editModeTask, setEditModeTask] = useState(false);\n  const [ isMouseOver, setIsMouseOver] = useState(false);\n\n  let handleClick = () => {\n    setEditModeTask(true)\n  }\n\n  return (\n    <div \n      className=\"task\" \n      onClick={handleClick}\n      onMouseEnter={e => setIsMouseOver(true)}\n      onMouseLeave={e => setIsMouseOver(false)}\n    >\n      { editModeTask ? <textarea \n      autoFocus\n      onBlur={()=>{\n        setEditModeTask(false)\n        // setInput(name)\n      }}\n      >{content}</textarea> : `${content}`} \n\n      { isMouseOver && <Button \n        type='delete' \n        id={id} \n        handleClick={handleDeleteTask}\n      />}\n    </div>\n  )\n}"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,UAAU;AAC7B,OAAO,yBAAyB;AAChC,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,eAAe,SAASC,IAAIA,CAAC;EAACC,IAAI;EAAEC;AAAgB,CAAC,EAAE;EAAAC,EAAA;EACrD,MAAM;IAACC,OAAO;IAAEC;EAAG,CAAC,GAAGJ,IAAI;EAE3B,MAAM,CAACK,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAAEW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEtD,IAAIa,WAAW,GAAGA,CAAA,KAAM;IACtBH,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,oBACER,OAAA;IACEY,SAAS,EAAC,MAAM;IAChBC,OAAO,EAAEF,WAAY;IACrBG,YAAY,EAAEC,CAAC,IAAIL,cAAc,CAAC,IAAI,CAAE;IACxCM,YAAY,EAAED,CAAC,IAAIL,cAAc,CAAC,KAAK,CAAE;IAAAO,QAAA,GAEvCV,YAAY,gBAAGP,OAAA;MACjBkB,SAAS;MACTC,MAAM,EAAEA,CAAA,KAAI;QACVX,eAAe,CAAC,KAAK,CAAC;QACtB;MACF,CAAE;MAAAS,QAAA,EACAZ;IAAO;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CAAC,GAAI,GAAElB,OAAQ,EAAC,EAElCI,WAAW,iBAAIT,OAAA,CAACH,MAAM;MACtB2B,IAAI,EAAC,QAAQ;MACblB,EAAE,EAAEA,EAAG;MACPK,WAAW,EAAER;IAAiB;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACnB,EAAA,CAhCuBH,IAAI;AAAAwB,EAAA,GAAJxB,IAAI;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}