{"ast":null,"code":"var _jsxFileName = \"/Users/a1/projects/with mentor practice/kanban-board/src/components/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useMemo, useState } from 'react';\nimport '../blocks/app/app.css';\nimport Button from './Button';\nimport Column from './Column';\nimport Footer from './Footer';\nimport Popup from './Popup';\nimport { DndContext, PointerSensor, useSensor, useSensors } from '@dnd-kit/core';\nimport { SortableContext, arrayMove } from '@dnd-kit/sortable';\nimport { logIn } from '../context/user';\nimport { useDispatch } from 'react-redux';\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\nimport { selectUser } from '../context/user';\nimport { useSelector } from 'react-redux';\nimport Header from './Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [columns, setColumns] = useState(JSON.parse(localStorage.getItem('kanban-board-columns')) || []);\n  const [tasks, setTasks] = useState(JSON.parse(localStorage.getItem('kanban-board-tasks')) || []);\n  const {\n    user,\n    email\n  } = useSelector(selectUser);\n  let handleClickAddColumn = () => {\n    setColumns([...columns, {\n      name: 'Column ' + (columns.length + 1),\n      id: Math.ceil(Math.random() * 100000)\n    }]);\n    // localStorage.setItem('kanban-board', JSON.stringify(columns));\n  };\n  let handleClickDeleteColumn = id => {\n    const filteredColumns = columns.filter(el => el.id !== id);\n    const filteredTasks = tasks.filter(task => task.idColumn !== id);\n    setColumns(filteredColumns);\n    setTasks(filteredTasks);\n  };\n  let updateColumnName = ({\n    id,\n    input\n  }) => {\n    const update = columns.map(el => {\n      if (el.id !== id) return el;\n      return {\n        ...el,\n        name: input\n      };\n    });\n    setColumns(update);\n  };\n  let handleAddTask = id => {\n    const newTask = {\n      idColumn: id,\n      id: Math.ceil(Math.random() * 100000),\n      content: 'Task ' + (tasks.length + 1)\n    };\n    setTasks([...tasks, newTask]);\n  };\n  let handleDeleteTask = id => {\n    const filteredTasks = tasks.filter(task => task.id !== id);\n    setTasks(filteredTasks);\n  };\n  let updateTask = ({\n    id,\n    input\n  }) => {\n    const updatedTasks = tasks.map(task => {\n      if (task.id !== id) return task;\n      return {\n        ...task,\n        content: input\n      };\n    });\n    setTasks(updatedTasks);\n  };\n\n  /// dnd-kit \n  const columnsID = useMemo(() => columns.map(el => el.id), [columns]);\n  const [activeColumn, setActiveColumn] = useState(null);\n  const [activeTask, setActiveTask] = useState(null);\n  //managing the area from where dnd starts to work, just move for this 'distance', to provide work other buttons\n  const sensors = useSensors(useSensor(PointerSensor, {\n    activationConstraint: {\n      distance: 3\n    }\n  }));\n  function onDragStart(event) {\n    var _event$active$data$cu, _event$active$data$cu2;\n    if (((_event$active$data$cu = event.active.data.current) === null || _event$active$data$cu === void 0 ? void 0 : _event$active$data$cu.type) === 'column') {\n      setActiveColumn(event.active.data.current.id);\n      return;\n    }\n    if (((_event$active$data$cu2 = event.active.data.current) === null || _event$active$data$cu2 === void 0 ? void 0 : _event$active$data$cu2.type) === 'task') {\n      setActiveTask(event.active.data.current.task);\n      return;\n    }\n  }\n  function onDragEnd(event) {\n    setActiveTask(null);\n    setActiveColumn(null);\n    const {\n      active,\n      over\n    } = event; /// {active, over}\n\n    if (!over) return;\n    const activeId = active.id; /// active\n    const overId = over.id;\n    if (activeId === overId) return;\n    setColumns(columns => {\n      const draggindColumn = columns.findIndex(el => el.id === activeId);\n      const overColumn = columns.findIndex(el => el.id === overId);\n      return arrayMove(columns, draggindColumn, overColumn);\n    });\n  }\n  function onDragOver(event) {\n    const {\n      active,\n      over\n    } = event; /// {active, over}\n\n    if (!over) return;\n    const activeId = active.id; /// active\n    const overId = over.id;\n    if (activeId === overId) return;\n    if (!activeTask) return;\n    const isActiveTask = active.data.current.type === 'task';\n    const isOverTask = over.data.current.type === 'task';\n    /// dropping a task over another task\n    if (isActiveTask && isOverTask) {\n      setTasks(tasks => {\n        const activeIndex = tasks.findIndex(el => el.id === activeId);\n        const overIndex = tasks.findIndex(el => el.id === overId);\n        tasks[activeIndex].idColumn = tasks[overIndex].idColumn;\n        return arrayMove(tasks, activeIndex, overIndex);\n      });\n    }\n    /// dropping a task over am ampty other column\n    const isOverColumn = over.data.current.type === 'column';\n    setActiveColumn(null);\n    if (isActiveTask && isOverColumn) {\n      setTasks(tasks => {\n        const activeIndex = tasks.findIndex(el => el.id === activeId);\n        tasks[activeIndex].idColumn = overId;\n        return arrayMove(tasks, activeIndex, activeIndex);\n      });\n    }\n  }\n  /// dnd-kit end\n\n  useEffect(() => {\n    localStorage.setItem('kanban-board-columns', JSON.stringify(columns));\n  }, [columns]);\n  useEffect(() => {\n    localStorage.setItem('kanban-board-tasks', JSON.stringify(tasks));\n  }, [tasks]);\n  const dispatch = useDispatch();\n  const auth = getAuth();\n  useEffect(() => {\n    onAuthStateChanged(auth, user => {\n      if (user) {\n        // User is signed in, see docs for a list of available properties\n        // https://firebase.google.com/docs/reference/js/auth.user\n        const uid = user.uid;\n        const email = user.email;\n        dispatch(logIn({\n          email: email,\n          id: uid\n        }));\n\n        // console.log('app chacking user auth', uid,email)\n      } else {\n        // User is signed out\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(DndContext, {\n    onDragStart: onDragStart,\n    onDragEnd: onDragEnd,\n    onDragOver: onDragOver,\n    sensors: sensors,\n    children: [/*#__PURE__*/_jsxDEV(Popup, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), user && /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(SortableContext, {\n        items: columnsID,\n        children: columns.map(el => {\n          return /*#__PURE__*/_jsxDEV(Column, {\n            id: el.id,\n            name: el.name,\n            handleClick: handleClickDeleteColumn,\n            updateColumnName: updateColumnName,\n            handleAddTask: handleAddTask,\n            tasks: tasks.filter(task => task.idColumn === el.id),\n            handleDeleteTask: handleDeleteTask,\n            updateTask: updateTask\n          }, el.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 18\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        content: \"Add column\",\n        handleClick: handleClickAddColumn,\n        type: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), activeColumn ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n\n  // function checkToken() {\n  //   if (localStorage.getItem('kanban-token')) {\n\n  //   }\n  // }\n}\n_s(App, \"XCElEKQMC2Ehlx8aA7/gE8y+t6U=\", false, function () {\n  return [useSelector, useSensors, useSensor, useDispatch];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useMemo","useState","Button","Column","Footer","Popup","DndContext","PointerSensor","useSensor","useSensors","SortableContext","arrayMove","logIn","useDispatch","getAuth","onAuthStateChanged","selectUser","useSelector","Header","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","columns","setColumns","JSON","parse","localStorage","getItem","tasks","setTasks","user","email","handleClickAddColumn","name","length","id","Math","ceil","random","handleClickDeleteColumn","filteredColumns","filter","el","filteredTasks","task","idColumn","updateColumnName","input","update","map","handleAddTask","newTask","content","handleDeleteTask","updateTask","updatedTasks","columnsID","activeColumn","setActiveColumn","activeTask","setActiveTask","sensors","activationConstraint","distance","onDragStart","event","_event$active$data$cu","_event$active$data$cu2","active","data","current","type","onDragEnd","over","activeId","overId","draggindColumn","findIndex","overColumn","onDragOver","isActiveTask","isOverTask","activeIndex","overIndex","isOverColumn","setItem","stringify","dispatch","auth","uid","children","fileName","_jsxFileName","lineNumber","columnNumber","className","items","handleClick","_c","$RefreshReg$"],"sources":["/Users/a1/projects/with mentor practice/kanban-board/src/components/App.js"],"sourcesContent":["import { useEffect, useMemo, useState } from 'react';\nimport '../blocks/app/app.css';\nimport Button from './Button';\nimport Column from './Column';\nimport Footer from './Footer';\nimport Popup from './Popup';\nimport { DndContext, PointerSensor, useSensor, useSensors } from '@dnd-kit/core';\nimport {SortableContext, arrayMove} from '@dnd-kit/sortable';\n\nimport { logIn } from '../context/user';\nimport { useDispatch } from 'react-redux';\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\nimport { selectUser } from '../context/user';\nimport { useSelector } from 'react-redux';\nimport Header from './Header';\n\n\nfunction App() {\n\n  const [columns, setColumns] = useState(JSON.parse(localStorage.getItem('kanban-board-columns')) || []);\n  const [tasks, setTasks] = useState(JSON.parse(localStorage.getItem('kanban-board-tasks')) ||[]);\n \n\n  const {user, email} = useSelector(selectUser);\n\n  let handleClickAddColumn = () => {\n    setColumns([...columns, {name: 'Column ' + (columns.length + 1), id: Math.ceil(Math.random()*100000)} ]);\n    // localStorage.setItem('kanban-board', JSON.stringify(columns));\n  }\n\n  let handleClickDeleteColumn = (id) => {\n    const filteredColumns = columns.filter( el => el.id !== id)\n    const filteredTasks = tasks.filter(task => task.idColumn !== id)\n    setColumns(filteredColumns)\n    setTasks(filteredTasks)\n  }\n\n  let updateColumnName = ({id, input}) => {\n    const update = columns.map(el => {\n      if (el.id !== id)  return el\n      return {...el, name:input}\n    })\n    setColumns(update)\n  }\n\n  let handleAddTask = (id) => {\n    const newTask = {\n      idColumn: id,\n      id: Math.ceil(Math.random()*100000),\n      content: 'Task ' + (tasks.length + 1),\n    }\n    setTasks([...tasks, newTask])\n  }\n\n  let handleDeleteTask = (id) => {\n    const filteredTasks = tasks.filter(task => task.id !== id)\n    setTasks(filteredTasks)\n  }\n\n  let updateTask = ({id, input}) => {\n    const updatedTasks = tasks.map(task => {\n      if (task.id !== id) return task\n      return {...task, content:input}\n    })\n    setTasks(updatedTasks)\n  }\n\n  /// dnd-kit \n  const columnsID = useMemo(() => columns.map(el => el.id), [columns]);\n  const [activeColumn, setActiveColumn] = useState(null);\n  const [activeTask, setActiveTask] = useState(null);\n  //managing the area from where dnd starts to work, just move for this 'distance', to provide work other buttons\n  const sensors = useSensors(useSensor(PointerSensor, {\n    activationConstraint: {\n      distance: 3,\n    }\n  }));\n\n  function onDragStart(event) {\n    if (event.active.data.current?.type === 'column') {\n      setActiveColumn(event.active.data.current.id)\n      return\n    }\n    if (event.active.data.current?.type === 'task') {\n      setActiveTask(event.active.data.current.task)\n      return\n    }\n  }\n  function onDragEnd(event) {\n    setActiveTask(null)\n    setActiveColumn(null)\n\n    const {active,over} = event; /// {active, over}\n\n    if (!over) return\n    \n    const activeId = active.id;  /// active\n    const overId = over.id;\n\n    if ( activeId === overId) return\n\n    setColumns(columns => {\n      const draggindColumn = columns.findIndex(el => el.id === activeId)\n      const overColumn = columns.findIndex(el => el.id === overId)\n      return arrayMove(columns, draggindColumn, overColumn)\n    })\n  }\n  function onDragOver(event) {\n    const {active,over} = event; /// {active, over}\n\n    if (!over) return\n    \n    const activeId = active.id;  /// active\n    const overId = over.id;\n\n    if ( activeId === overId) return\n\n    if (!activeTask) return\n\n    const isActiveTask = active.data.current.type === 'task'\n    const isOverTask = over.data.current.type === 'task'\n    /// dropping a task over another task\n    if (isActiveTask && isOverTask) {\n      setTasks(tasks => {\n        const activeIndex = tasks.findIndex(el => el.id === activeId)\n        const overIndex = tasks.findIndex(el => el.id === overId)\n\n        tasks[activeIndex].idColumn = tasks[overIndex].idColumn\n\n        return arrayMove(tasks, activeIndex, overIndex)\n      })\n    }\n    /// dropping a task over am ampty other column\n    const isOverColumn = over.data.current.type === 'column';\n    setActiveColumn(null)\n\n    if (isActiveTask && isOverColumn) {\n      setTasks(tasks => {\n        const activeIndex = tasks.findIndex(el => el.id === activeId)\n\n        tasks[activeIndex].idColumn = overId\n\n        return arrayMove(tasks, activeIndex, activeIndex)\n      })\n    }\n  }\n  /// dnd-kit end\n\n  useEffect(() => {\n    localStorage.setItem('kanban-board-columns', JSON.stringify(columns));\n  }, [columns])\n  useEffect(() => {\n    localStorage.setItem('kanban-board-tasks', JSON.stringify(tasks));\n  }, [tasks])\n  const dispatch = useDispatch();\n  const auth = getAuth();\n  useEffect(() => {\n    \n    onAuthStateChanged(auth, (user) => {\n    if (user) {\n      // User is signed in, see docs for a list of available properties\n      // https://firebase.google.com/docs/reference/js/auth.user\n      const uid = user.uid;\n      const email = user.email;\n\n      dispatch(logIn({email:email,id:uid}))\n\n      // console.log('app chacking user auth', uid,email)\n    } else {\n      // User is signed out\n    }\n  });\n  },[])\n\n  return (\n    <DndContext onDragStart={onDragStart} onDragEnd={onDragEnd} onDragOver={onDragOver} sensors={sensors}>\n      <Popup />\n      {user && <Header />}\n\n      <div className=\"app\">\n        <SortableContext items={columnsID}>\n        {columns.map(el => {\n          return <Column\n            key={el.id}\n            id={el.id}\n            name={el.name}\n            handleClick={handleClickDeleteColumn}\n            updateColumnName={updateColumnName}\n            handleAddTask={handleAddTask}\n            tasks={tasks.filter(task => task.idColumn === el.id )}\n            handleDeleteTask={handleDeleteTask}\n            updateTask={updateTask}\n          />\n        })}\n        </SortableContext>\n        \n        <Button   \n          content='Add column'\n          handleClick={handleClickAddColumn}\n          type='add'\n        />\n\n      </div>\n      {/* patch */}\n     {activeColumn ? <></> : <></>} \n     {/* patch end */}\n\n     <Footer />\n    </DndContext>\n  );\n\n  // function checkToken() {\n  //   if (localStorage.getItem('kanban-token')) {\n\n  //   }\n  // }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}