{"ast":null,"code":"var _jsxFileName = \"/Users/a1/projects/with mentor practice/kanban-board/src/components/Task.js\",\n  _s = $RefreshSig$();\nimport Button from \"./Button\";\nimport '../blocks/task/task.css';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Task({\n  task,\n  handleDeleteTask,\n  updateTask\n}) {\n  _s();\n  const {\n    content,\n    id,\n    idColumn\n  } = task;\n  const [editModeTask, setEditModeTask] = useState(false);\n  const [isMouseOver, setIsMouseOver] = useState(false);\n  const [input, setInput] = useState(content);\n  let handleClick = () => {\n    setEditModeTask(true);\n    setIsMouseOver(false);\n  };\n  function handleChange(e) {\n    setInput(e.target.value);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task\",\n    onClick: handleClick,\n    onMouseEnter: e => editModeTask || setIsMouseOver(true),\n    onMouseLeave: e => setIsMouseOver(false),\n    children: [editModeTask ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"task__textarea\",\n      autoFocus: true,\n      onBlur: () => {\n        setEditModeTask(false);\n        // setInput(name)\n      },\n      placeholder: \"Task\",\n      value: input,\n      onKeyDown: e => {\n        if (e.key !== 'Enter') return;\n        updateTask({\n          input,\n          id,\n          idColumn\n        });\n        setEditModeTask(false);\n      },\n      onChange: handleChange,\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 24\n    }, this) : `${content}`, isMouseOver && /*#__PURE__*/_jsxDEV(Button, {\n      type: \"delete\",\n      id: id,\n      handleClick: handleDeleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(Task, \"uxk8c1/dIeNOaEU1yjjz6+vbusk=\");\n_c = Task;\nvar _c;\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["Button","useState","jsxDEV","_jsxDEV","Task","task","handleDeleteTask","updateTask","_s","content","id","idColumn","editModeTask","setEditModeTask","isMouseOver","setIsMouseOver","input","setInput","handleClick","handleChange","e","target","value","className","onClick","onMouseEnter","onMouseLeave","children","autoFocus","onBlur","placeholder","onKeyDown","key","onChange","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["/Users/a1/projects/with mentor practice/kanban-board/src/components/Task.js"],"sourcesContent":["import Button from \"./Button\";\nimport '../blocks/task/task.css';\nimport { useState } from \"react\";\n\nexport default function Task({task, handleDeleteTask, updateTask}) {\n  const {content, id, idColumn } = task;\n\n  const [editModeTask, setEditModeTask] = useState(false);\n  const [ isMouseOver, setIsMouseOver] = useState(false);\n  const [ input, setInput ] = useState(content);\n\n  let handleClick = () => {\n    setEditModeTask(true)\n    setIsMouseOver(false)\n  }\n  function handleChange(e) {\n    setInput(e.target.value)\n  }\n\n  return (\n    <div \n      className=\"task\" \n      onClick={handleClick}\n      onMouseEnter={e => editModeTask || setIsMouseOver(true)}\n      onMouseLeave={e => setIsMouseOver(false)}\n    >\n      { editModeTask ? <textarea \n      className=\"task__textarea\"\n      autoFocus\n      onBlur={()=>{\n        setEditModeTask(false)\n        // setInput(name)\n      }}\n      placeholder=\"Task\"\n      value={input}\n      onKeyDown={(e) => {\n        if (e.key !== 'Enter') return\n        updateTask({input, id, idColumn});\n        setEditModeTask(false)\n      }}\n      onChange={handleChange}\n      >{content}</textarea> : `${content}`} \n\n      { isMouseOver && <Button \n        type='delete' \n        id={id} \n        handleClick={handleDeleteTask}\n      />}\n    </div>\n  )\n}"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,UAAU;AAC7B,OAAO,yBAAyB;AAChC,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,eAAe,SAASC,IAAIA,CAAC;EAACC,IAAI;EAAEC,gBAAgB;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EACjE,MAAM;IAACC,OAAO;IAAEC,EAAE;IAAEC;EAAS,CAAC,GAAGN,IAAI;EAErC,MAAM,CAACO,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAAEa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACtD,MAAM,CAAEe,KAAK,EAAEC,QAAQ,CAAE,GAAGhB,QAAQ,CAACQ,OAAO,CAAC;EAE7C,IAAIS,WAAW,GAAGA,CAAA,KAAM;IACtBL,eAAe,CAAC,IAAI,CAAC;IACrBE,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;EACD,SAASI,YAAYA,CAACC,CAAC,EAAE;IACvBH,QAAQ,CAACG,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC1B;EAEA,oBACEnB,OAAA;IACEoB,SAAS,EAAC,MAAM;IAChBC,OAAO,EAAEN,WAAY;IACrBO,YAAY,EAAEL,CAAC,IAAIR,YAAY,IAAIG,cAAc,CAAC,IAAI,CAAE;IACxDW,YAAY,EAAEN,CAAC,IAAIL,cAAc,CAAC,KAAK,CAAE;IAAAY,QAAA,GAEvCf,YAAY,gBAAGT,OAAA;MACjBoB,SAAS,EAAC,gBAAgB;MAC1BK,SAAS;MACTC,MAAM,EAAEA,CAAA,KAAI;QACVhB,eAAe,CAAC,KAAK,CAAC;QACtB;MACF,CAAE;MACFiB,WAAW,EAAC,MAAM;MAClBR,KAAK,EAAEN,KAAM;MACbe,SAAS,EAAGX,CAAC,IAAK;QAChB,IAAIA,CAAC,CAACY,GAAG,KAAK,OAAO,EAAE;QACvBzB,UAAU,CAAC;UAACS,KAAK;UAAEN,EAAE;UAAEC;QAAQ,CAAC,CAAC;QACjCE,eAAe,CAAC,KAAK,CAAC;MACxB,CAAE;MACFoB,QAAQ,EAAEd,YAAa;MAAAQ,QAAA,EACrBlB;IAAO;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CAAC,GAAI,GAAE5B,OAAQ,EAAC,EAElCK,WAAW,iBAAIX,OAAA,CAACH,MAAM;MACtBsC,IAAI,EAAC,QAAQ;MACb5B,EAAE,EAAEA,EAAG;MACPQ,WAAW,EAAEZ;IAAiB;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC7B,EAAA,CA9CuBJ,IAAI;AAAAmC,EAAA,GAAJnC,IAAI;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}