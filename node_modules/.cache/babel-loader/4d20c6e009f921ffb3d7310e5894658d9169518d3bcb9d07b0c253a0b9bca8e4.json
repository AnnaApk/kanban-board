{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { getDatabase, ref, set } from \"firebase/database\";\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, onAuthStateChanged, signOut } from \"firebase/auth\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\nconst firebaseConfig = {\n  databaseURL: 'https://kanban-brd-default-rtdb.firebaseio.com/',\n  apiKey: \"AIzaSyAnbTHf5pbc8du7zHhnGPSkLkVLFcgWSlA\",\n  authDomain: \"kanban-brd.firebaseapp.com\",\n  projectId: \"kanban-brd\",\n  storageBucket: \"kanban-brd.appspot.com\",\n  messagingSenderId: \"42814942618\",\n  appId: \"1:42814942618:web:f44f4b8a8d5be72e679e23\"\n};\nconst app = initializeApp(firebaseConfig);\nconst db = getDatabase(app);\nconst auth = getAuth(app);\nfunction creatUser({\n  email,\n  password\n}) {\n  return createUserWithEmailAndPassword(auth, email, password);\n}\nfunction logInUser({\n  email,\n  password\n}) {\n  return signInWithEmailAndPassword(auth, email, password);\n}\nfunction signOutUser() {\n  return signOut(auth);\n}\nfunction addNewTask({\n  userID,\n  task,\n  columnID\n}) {\n  return set(ref(db, `${userID}/tasks/`), {\n    task: task,\n    columnID: columnID\n  });\n}\nfunction addNewColumn({\n  userID,\n  column\n}) {\n  return set(ref(db, `${userID}/columns/`), {\n    column: column\n  });\n}\naddNewColumn({\n  userID: 'QBXuoeKH5KeqKnpQ4iMco8ynsnh1',\n  column: 'column'\n});\nexport { auth, creatUser, logInUser, signOutUser, addNewColumn, addNewTask };","map":{"version":3,"names":["initializeApp","getDatabase","ref","set","getAuth","createUserWithEmailAndPassword","signInWithEmailAndPassword","onAuthStateChanged","signOut","firebaseConfig","databaseURL","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","db","auth","creatUser","email","password","logInUser","signOutUser","addNewTask","userID","task","columnID","addNewColumn","column"],"sources":["/Users/a1/projects/with mentor practice/kanban-board/src/api/firebase.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getDatabase, ref, set } from \"firebase/database\";\nimport {getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, onAuthStateChanged, signOut} from \"firebase/auth\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\nconst firebaseConfig = {\n  databaseURL: 'https://kanban-brd-default-rtdb.firebaseio.com/',\n  apiKey: \"AIzaSyAnbTHf5pbc8du7zHhnGPSkLkVLFcgWSlA\",\n  authDomain: \"kanban-brd.firebaseapp.com\",\n  projectId: \"kanban-brd\",\n  storageBucket: \"kanban-brd.appspot.com\",\n  messagingSenderId: \"42814942618\",\n  appId: \"1:42814942618:web:f44f4b8a8d5be72e679e23\"\n};\n\nconst app = initializeApp(firebaseConfig);\nconst db = getDatabase(app);\nconst auth = getAuth(app);\n\nfunction creatUser({email, password}) {\n  return createUserWithEmailAndPassword(auth, email, password)\n}\n\nfunction logInUser({email, password}) {\n  return signInWithEmailAndPassword(auth, email, password)\n}\n\nfunction signOutUser() {\n  return signOut(auth)\n}\n\nfunction addNewTask({\n  userID, task, columnID, \n}) {\n  return set(ref(db, `${userID}/tasks/`), {\n    task: task,\n    columnID: columnID,\n  })\n}\n\nfunction addNewColumn({\n  userID, column, \n}) {\n  return set(ref(db, `${userID}/columns/`), {\n    column: column,\n  })\n}\n\naddNewColumn({userID:'QBXuoeKH5KeqKnpQ4iMco8ynsnh1',column:'column'})\n\nexport {\n  auth,\n  creatUser,\n  logInUser,\n  signOutUser,\n  addNewColumn,\n  addNewTask\n};\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,WAAW,EAAEC,GAAG,EAAEC,GAAG,QAAQ,mBAAmB;AACzD,SAAQC,OAAO,EAAEC,8BAA8B,EAAEC,0BAA0B,EAAEC,kBAAkB,EAAEC,OAAO,QAAO,eAAe;AAC9H;AACA;;AAEA,MAAMC,cAAc,GAAG;EACrBC,WAAW,EAAE,iDAAiD;EAC9DC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,4BAA4B;EACxCC,SAAS,EAAE,YAAY;EACvBC,aAAa,EAAE,wBAAwB;EACvCC,iBAAiB,EAAE,aAAa;EAChCC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,GAAG,GAAGjB,aAAa,CAACS,cAAc,CAAC;AACzC,MAAMS,EAAE,GAAGjB,WAAW,CAACgB,GAAG,CAAC;AAC3B,MAAME,IAAI,GAAGf,OAAO,CAACa,GAAG,CAAC;AAEzB,SAASG,SAASA,CAAC;EAACC,KAAK;EAAEC;AAAQ,CAAC,EAAE;EACpC,OAAOjB,8BAA8B,CAACc,IAAI,EAAEE,KAAK,EAAEC,QAAQ,CAAC;AAC9D;AAEA,SAASC,SAASA,CAAC;EAACF,KAAK;EAAEC;AAAQ,CAAC,EAAE;EACpC,OAAOhB,0BAA0B,CAACa,IAAI,EAAEE,KAAK,EAAEC,QAAQ,CAAC;AAC1D;AAEA,SAASE,WAAWA,CAAA,EAAG;EACrB,OAAOhB,OAAO,CAACW,IAAI,CAAC;AACtB;AAEA,SAASM,UAAUA,CAAC;EAClBC,MAAM;EAAEC,IAAI;EAAEC;AAChB,CAAC,EAAE;EACD,OAAOzB,GAAG,CAACD,GAAG,CAACgB,EAAE,EAAG,GAAEQ,MAAO,SAAQ,CAAC,EAAE;IACtCC,IAAI,EAAEA,IAAI;IACVC,QAAQ,EAAEA;EACZ,CAAC,CAAC;AACJ;AAEA,SAASC,YAAYA,CAAC;EACpBH,MAAM;EAAEI;AACV,CAAC,EAAE;EACD,OAAO3B,GAAG,CAACD,GAAG,CAACgB,EAAE,EAAG,GAAEQ,MAAO,WAAU,CAAC,EAAE;IACxCI,MAAM,EAAEA;EACV,CAAC,CAAC;AACJ;AAEAD,YAAY,CAAC;EAACH,MAAM,EAAC,8BAA8B;EAACI,MAAM,EAAC;AAAQ,CAAC,CAAC;AAErE,SACEX,IAAI,EACJC,SAAS,EACTG,SAAS,EACTC,WAAW,EACXK,YAAY,EACZJ,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}