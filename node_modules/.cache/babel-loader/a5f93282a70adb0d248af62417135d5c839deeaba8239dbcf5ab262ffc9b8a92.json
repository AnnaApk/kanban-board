{"ast":null,"code":"var _jsxFileName = \"/Users/a1/projects/with mentor practice/kanban-board/src/components/App.js\",\n  _s = $RefreshSig$();\n// import logo from './logo.svg';\nimport { useState } from 'react';\nimport '../blocks/app/app.css';\nimport Button from './Button';\nimport Column from './Column';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [columns, setColumns] = useState([]);\n  let handleClickAddColumn = () => {\n    setColumns([...columns, {\n      name: 'Column' + (columns.length + 1),\n      id: Math.ceil(Math.random() * 100000)\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [columns.map(el => {\n      return /*#__PURE__*/_jsxDEV(Column, {\n        name: el.name\n      }, el.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 16\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"Add column\",\n      handleClick: handleClickAddColumn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Hbl6QqZlOkn9JckeQ8kz6YnFPOM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Button","Column","jsxDEV","_jsxDEV","App","_s","columns","setColumns","handleClickAddColumn","name","length","id","Math","ceil","random","className","children","map","el","fileName","_jsxFileName","lineNumber","columnNumber","text","handleClick","_c","$RefreshReg$"],"sources":["/Users/a1/projects/with mentor practice/kanban-board/src/components/App.js"],"sourcesContent":["// import logo from './logo.svg';\nimport { useState } from 'react';\nimport '../blocks/app/app.css';\nimport Button from './Button';\nimport Column from './Column';\n\nfunction App() {\n\n  const [columns, setColumns] = useState([]);\n\n  let handleClickAddColumn = () => {\n    setColumns([...columns, {name: 'Column' + (columns.length + 1), id: Math.ceil(Math.random()*100000)} ])\n  }\n\n  return (\n    <div className=\"app\">\n\n      {columns.map(el => {\n        return <Column\n          key={el.id}\n          name={el.name}\n        />\n      })}\n\n      <Button \n        text='Add column'\n        handleClick={handleClickAddColumn}\n      />\n      \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,uBAAuB;AAC9B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1C,IAAIS,oBAAoB,GAAGA,CAAA,KAAM;IAC/BD,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAE;MAACG,IAAI,EAAE,QAAQ,IAAIH,OAAO,CAACI,MAAM,GAAG,CAAC,CAAC;MAAEC,EAAE,EAAEC,IAAI,CAACC,IAAI,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAC,MAAM;IAAC,CAAC,CAAE,CAAC;EACzG,CAAC;EAED,oBACEX,OAAA;IAAKY,SAAS,EAAC,KAAK;IAAAC,QAAA,GAEjBV,OAAO,CAACW,GAAG,CAACC,EAAE,IAAI;MACjB,oBAAOf,OAAA,CAACF,MAAM;QAEZQ,IAAI,EAAES,EAAE,CAACT;MAAK,GADTS,EAAE,CAACP,EAAE;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEX,CAAC;IACJ,CAAC,CAAC,eAEFnB,OAAA,CAACH,MAAM;MACLuB,IAAI,EAAC,YAAY;MACjBC,WAAW,EAAEhB;IAAqB;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEC,CAAC;AAEV;AAACjB,EAAA,CAzBQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AA2BZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}