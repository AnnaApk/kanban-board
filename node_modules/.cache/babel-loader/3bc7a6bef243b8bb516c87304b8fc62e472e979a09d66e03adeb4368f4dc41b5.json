{"ast":null,"code":"var _jsxFileName = \"/Users/a1/projects/with mentor practice/kanban-board/src/components/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useMemo, useState } from 'react';\nimport '../blocks/app/app.css';\nimport Header from './Header';\nimport Button from './Button';\nimport Column from './Column';\nimport Footer from './Footer';\nimport Popup from './Popup';\nimport { DndContext, PointerSensor, useSensor, useSensors } from '@dnd-kit/core';\nimport { SortableContext, arrayMove } from '@dnd-kit/sortable';\nimport { logIn, logOut, selectUser } from '../context/user';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\nimport { creatUser, logInUser, signOutUser, getData, addNewColumn } from '../api/firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const dispatch = useDispatch();\n  const auth = getAuth();\n  let userHere = false;\n  let id; //= useSelector(selectUser); initially check isAnyUserLogIN\n\n  const [columns, setColumns] = useState(getInitialData());\n  const [tasks, setTasks] = useState(JSON.parse(localStorage.getItem('kanban-board-tasks')) || []);\n  console.log('line 23', columns);\n  const [isOpen, setIsOpen] = useState(false); /// popup\n  const [isOpenLogIn, setIsOpenLogIn] = useState(false);\n  const [isOpenNewAccount, setIsOpenNewAccount] = useState(false);\n  function handleClickAddColumn() {\n    if (userHere) {\n      addNewColumnDB({\n        userID: id\n      });\n    } else {\n      setColumns([...columns, {\n        name: 'Column ' + (columns.length + 1),\n        id: Math.ceil(Math.random() * 100000)\n      }]);\n    }\n  }\n  let handleClickDeleteColumn = id => {\n    const filteredColumns = columns.filter(el => el.id !== id);\n    const filteredTasks = tasks.filter(task => task.idColumn !== id);\n    setColumns(filteredColumns);\n    setTasks(filteredTasks);\n  };\n  let updateColumnName = ({\n    id,\n    input\n  }) => {\n    const update = columns.map(el => {\n      if (el.id !== id) return el;\n      return {\n        ...el,\n        name: input\n      };\n    });\n    setColumns(update);\n  };\n  let handleAddTask = id => {\n    const newTask = {\n      idColumn: id,\n      id: Math.ceil(Math.random() * 100000),\n      content: 'Task ' + (tasks.length + 1)\n    };\n    setTasks([...tasks, newTask]);\n  };\n  let handleDeleteTask = id => {\n    const filteredTasks = tasks.filter(task => task.id !== id);\n    setTasks(filteredTasks);\n  };\n  let updateTask = ({\n    id,\n    input\n  }) => {\n    const updatedTasks = tasks.map(task => {\n      if (task.id !== id) return task;\n      return {\n        ...task,\n        content: input\n      };\n    });\n    setTasks(updatedTasks);\n  };\n\n  /// dnd-kit \n  const columnsID = useMemo(() => columns.map(el => el.id), [columns]);\n  const [activeColumn, setActiveColumn] = useState(null);\n  const [activeTask, setActiveTask] = useState(null);\n  //managing the area from where dnd starts to work, just move for this 'distance', to provide work other buttons\n  const sensors = useSensors(useSensor(PointerSensor, {\n    activationConstraint: {\n      distance: 3\n    }\n  }));\n  function onDragStart(event) {\n    var _event$active$data$cu, _event$active$data$cu2;\n    if (((_event$active$data$cu = event.active.data.current) === null || _event$active$data$cu === void 0 ? void 0 : _event$active$data$cu.type) === 'column') {\n      setActiveColumn(event.active.data.current.id);\n      return;\n    }\n    if (((_event$active$data$cu2 = event.active.data.current) === null || _event$active$data$cu2 === void 0 ? void 0 : _event$active$data$cu2.type) === 'task') {\n      setActiveTask(event.active.data.current.task);\n      return;\n    }\n  }\n  function onDragEnd(event) {\n    setActiveTask(null);\n    setActiveColumn(null);\n    const {\n      active,\n      over\n    } = event; /// {active, over}\n\n    if (!over) return;\n    const activeId = active.id; /// active\n    const overId = over.id;\n    if (activeId === overId) return;\n    setColumns(columns => {\n      const draggindColumn = columns.findIndex(el => el.id === activeId);\n      const overColumn = columns.findIndex(el => el.id === overId);\n      return arrayMove(columns, draggindColumn, overColumn);\n    });\n  }\n  function onDragOver(event) {\n    const {\n      active,\n      over\n    } = event; /// {active, over}\n\n    if (!over) return;\n    const activeId = active.id; /// active\n    const overId = over.id;\n    if (activeId === overId) return;\n    if (!activeTask) return;\n    const isActiveTask = active.data.current.type === 'task';\n    const isOverTask = over.data.current.type === 'task';\n    /// dropping a task over another task\n    if (isActiveTask && isOverTask) {\n      setTasks(tasks => {\n        const activeIndex = tasks.findIndex(el => el.id === activeId);\n        const overIndex = tasks.findIndex(el => el.id === overId);\n        tasks[activeIndex].idColumn = tasks[overIndex].idColumn;\n        return arrayMove(tasks, activeIndex, overIndex);\n      });\n    }\n    /// dropping a task over am ampty other column\n    const isOverColumn = over.data.current.type === 'column';\n    setActiveColumn(null);\n    if (isActiveTask && isOverColumn) {\n      setTasks(tasks => {\n        const activeIndex = tasks.findIndex(el => el.id === activeId);\n        tasks[activeIndex].idColumn = overId;\n        return arrayMove(tasks, activeIndex, activeIndex);\n      });\n    }\n  }\n  /// dnd-kit end\n\n  // useEffect(() => {\n  //   if (!user) localStorage.setItem('kanban-board-columns', JSON.stringify(columns));\n  // }, [columns, user])\n  // useEffect(() => {\n  //   localStorage.setItem('kanban-board-tasks', JSON.stringify(tasks));\n  // }, [tasks])\n\n  // useEffect(() => {\n  //   onAuthStateChanged(auth, (user) => {\n  //     if (user) {\n  //       // User is signed in, see docs for a list of available properties\n  //       // https://firebase.google.com/docs/reference/js/auth.user\n  //       const uid = user.uid;\n  //       const email = user.email;\n  //       dispatch(logIn({email:email,id:uid}))\n  //       getInitialDataDB({id:uid, str:'columns'}).then((res)=>setColumns(res))\n\n  //     } else {   // User is signed out\n  //       setColumns(getInitialDataLS('kanban-board-columns'))\n  //     } \n  //   });\n  // },[])\n  // useEffect(() => {\n\n  //   onAuthStateChanged(auth, (user) => {\n  //     if (user) {\n  //       // User is signed in, see docs for a list of available properties\n  //       // https://firebase.google.com/docs/reference/js/auth.user\n  //       const uid = user.uid;\n  //       const email = user.email;\n  //       dispatch(logIn({email:email,id:uid}))\n  //       id = uid\n  //       user = true\n  //     }\n  //     console.log('useEffect string 193' )\n  //   });\n  // },[])\n\n  return /*#__PURE__*/_jsxDEV(DndContext, {\n    onDragStart: onDragStart,\n    onDragEnd: onDragEnd,\n    onDragOver: onDragOver,\n    sensors: sensors,\n    children: [userHere ? /*#__PURE__*/_jsxDEV(Header, {\n      handleLogOut: handleLogOut\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(Popup, {\n      handleLogIn: handleLogIn,\n      handleCreatNewAccount: handleCreatNewAccount,\n      handleOpenClick: handleOpenClick,\n      handleCloseCLick: handleCloseCLick,\n      isOpen: isOpen,\n      isOpenLogIn: isOpenLogIn,\n      isOpenNewAccount: isOpenNewAccount,\n      handleOpenFormLogIn: handleOpenFormLogIn,\n      handleOpenFormNewAccount: handleOpenFormNewAccount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 60\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(SortableContext, {\n        items: columnsID,\n        children: columns.map(el => {\n          return /*#__PURE__*/_jsxDEV(Column, {\n            id: el.id,\n            name: el.name,\n            handleClick: handleClickDeleteColumn,\n            updateColumnName: updateColumnName,\n            handleAddTask: handleAddTask,\n            tasks: tasks.filter(task => task.idColumn === el.id),\n            handleDeleteTask: handleDeleteTask,\n            updateTask: updateTask\n          }, el.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 18\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        content: \"Add column\",\n        handleClick: () => {\n          handleClickAddColumn();\n        },\n        type: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), \" \", activeColumn ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), \" \", /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n  function handleCreatNewAccount({\n    email,\n    password\n  }) {\n    creatUser({\n      email,\n      password\n    }).then(user => {\n      console.log(user);\n      setIsOpenLogIn(true);\n      setIsOpenNewAccount(false);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n  function handleLogIn({\n    email,\n    password\n  }) {\n    logInUser({\n      email,\n      password\n    }).then(user => {\n      // setColumns([])\n      setIsOpenLogIn(false);\n      setIsOpen(false);\n      if (user.user) {\n        localStorage.setItem('kanban-token', JSON.stringify(user.user.accessToken));\n        dispatch(logIn({\n          email: email,\n          id: user.user.uid\n        }));\n      }\n    }).catch(err => {\n      console.log('catch', err);\n    });\n  }\n  function handleLogOut() {\n    signOutUser().then(() => {\n      // setColumns([])\n      dispatch(logOut());\n      localStorage.removeItem('kanban-token');\n    }).catch();\n  }\n  function handleOpenClick() {\n    setIsOpen(true);\n  }\n  function handleCloseCLick() {\n    setIsOpen(false);\n    setIsOpenLogIn(false);\n    setIsOpenNewAccount(false);\n  }\n  function handleOpenFormLogIn(e) {\n    e.preventDefault();\n    setIsOpenNewAccount(false);\n    setIsOpenLogIn(true);\n  }\n  function handleOpenFormNewAccount(e) {\n    e.preventDefault();\n    setIsOpenLogIn(false);\n    setIsOpenNewAccount(true);\n  }\n  function checkUserOnline() {\n    onAuthStateChanged(auth, user => {\n      if (user) {\n        const uid = user.uid;\n        const email = user.email;\n        dispatch(logIn({\n          email: email,\n          id: uid\n        }));\n        id = user.uid;\n        userHere = true;\n      } else {\n        handleLogOut();\n      }\n    });\n  }\n  function getInitialData() {\n    //let user = false;\n    checkUserOnline();\n    console.log('str292 getInitialData - user', userHere);\n    console.log('str293 getInitialData - id', id);\n    if (userHere) {\n      getInitialDataDB({\n        id: id,\n        str: 'columns'\n      }).then(res => res);\n    } else {\n      // User is signed out\n      return getInitialDataLS('kanban-board-columns');\n    }\n  }\n  async function getInitialDataDB({\n    id,\n    str\n  }) {\n    /// 'columns'  'tasks'\n    return await getData({\n      userID: id,\n      category: str\n    }).then(snapshot => {\n      if (snapshot.exists()) {\n        console.log('snapshot.val', Object.entries(snapshot.val()).map(el => [el[0], Object.values(el[1])[0]]));\n        const data = Object.entries(snapshot.val()).map(el => [el[0], Object.values(el[1])[0]]);\n        let data2 = [];\n        for (let i of data) {\n          data2.push({\n            id: i[0],\n            name: i[1]\n          });\n        }\n\n        // for (let i of snapshot.val()) {\n\n        // }\n        return data2;\n      } else {\n        console.log(\"No data available\", columns);\n        return [];\n      }\n    }).catch();\n  }\n  function getInitialDataLS(str) {\n    /// 'kanban-board-columns' 'kanban-board-tasks'\n    return JSON.parse(localStorage.getItem(str)) || [];\n  }\n  function addNewColumnDB({\n    userID,\n    column = 'column'\n  }) {\n    addNewColumn({\n      userID,\n      column\n    }).then(res => console.log('adddddd', res)).then(snapshot => {\n      if (snapshot.exists()) {\n        console.log('addNewColumnDB', snapshot.val());\n        return snapshot.val();\n      } else {\n        console.log(\"No snapshot in addNewColumnDB\");\n      }\n    }).catch();\n  }\n  // function addNewColumnLS(str, state ) {  /// 'kanban-board-columns' 'kanban-board-tasks', columns or tasks\n  //   console.log('addNewColumnLS', columns)\n  //   localStorage.setItem(str, JSON.stringify(state))\n  // }\n}\n_s(App, \"6lJH4oFj/UQaGqPosZO2+Q9Bw8g=\", false, function () {\n  return [useDispatch, useSensors, useSensor];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useMemo","useState","Header","Button","Column","Footer","Popup","DndContext","PointerSensor","useSensor","useSensors","SortableContext","arrayMove","logIn","logOut","selectUser","useDispatch","useSelector","getAuth","onAuthStateChanged","creatUser","logInUser","signOutUser","getData","addNewColumn","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","dispatch","auth","userHere","id","columns","setColumns","getInitialData","tasks","setTasks","JSON","parse","localStorage","getItem","console","log","isOpen","setIsOpen","isOpenLogIn","setIsOpenLogIn","isOpenNewAccount","setIsOpenNewAccount","handleClickAddColumn","addNewColumnDB","userID","name","length","Math","ceil","random","handleClickDeleteColumn","filteredColumns","filter","el","filteredTasks","task","idColumn","updateColumnName","input","update","map","handleAddTask","newTask","content","handleDeleteTask","updateTask","updatedTasks","columnsID","activeColumn","setActiveColumn","activeTask","setActiveTask","sensors","activationConstraint","distance","onDragStart","event","_event$active$data$cu","_event$active$data$cu2","active","data","current","type","onDragEnd","over","activeId","overId","draggindColumn","findIndex","overColumn","onDragOver","isActiveTask","isOverTask","activeIndex","overIndex","isOverColumn","children","handleLogOut","fileName","_jsxFileName","lineNumber","columnNumber","handleLogIn","handleCreatNewAccount","handleOpenClick","handleCloseCLick","handleOpenFormLogIn","handleOpenFormNewAccount","className","items","handleClick","email","password","then","user","catch","err","setItem","stringify","accessToken","uid","removeItem","e","preventDefault","checkUserOnline","getInitialDataDB","str","res","getInitialDataLS","category","snapshot","exists","Object","entries","val","values","data2","i","push","column","_c","$RefreshReg$"],"sources":["/Users/a1/projects/with mentor practice/kanban-board/src/components/App.js"],"sourcesContent":["import { useEffect, useMemo, useState } from 'react';\nimport '../blocks/app/app.css';\nimport Header from './Header';\nimport Button from './Button';\nimport Column from './Column';\nimport Footer from './Footer';\nimport Popup from './Popup';\nimport { DndContext, PointerSensor, useSensor, useSensors } from '@dnd-kit/core';\nimport {SortableContext, arrayMove} from '@dnd-kit/sortable';\n\nimport { logIn, logOut, selectUser } from '../context/user';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\nimport { creatUser, logInUser, signOutUser, getData, addNewColumn } from '../api/firebase';\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const auth = getAuth();\n\n  let userHere = false;\n  let id;  //= useSelector(selectUser); initially check isAnyUserLogIN\n\n  const [columns, setColumns] = useState(getInitialData());\n  const [tasks, setTasks] = useState(JSON.parse(localStorage.getItem('kanban-board-tasks')) || []);\n\n  console.log('line 23',columns)\n\n  const [isOpen, setIsOpen] = useState(false); /// popup\n  const [isOpenLogIn, setIsOpenLogIn] = useState(false);\n  const [isOpenNewAccount, setIsOpenNewAccount] = useState(false);\n\n  function handleClickAddColumn() {\n    if (userHere) {\n      addNewColumnDB({userID:id})\n    } else {\n      setColumns([...columns, {name: 'Column ' + (columns.length + 1), id: Math.ceil(Math.random()*100000)} ])\n      \n    }\n  }\n\n  let handleClickDeleteColumn = (id) => {\n    const filteredColumns = columns.filter( el => el.id !== id)\n    const filteredTasks = tasks.filter(task => task.idColumn !== id)\n    setColumns(filteredColumns)\n    setTasks(filteredTasks)\n  }\n\n  let updateColumnName = ({id, input}) => {\n    const update = columns.map(el => {\n      if (el.id !== id)  return el\n      return {...el, name:input}\n    })\n    setColumns(update)\n  }\n\n  let handleAddTask = (id) => {\n    const newTask = {\n      idColumn: id,\n      id: Math.ceil(Math.random()*100000),\n      content: 'Task ' + (tasks.length + 1),\n    }\n    setTasks([...tasks, newTask])\n  }\n\n  let handleDeleteTask = (id) => {\n    const filteredTasks = tasks.filter(task => task.id !== id)\n    setTasks(filteredTasks)\n  }\n\n  let updateTask = ({id, input}) => {\n    const updatedTasks = tasks.map(task => {\n      if (task.id !== id) return task\n      return {...task, content:input}\n    })\n    setTasks(updatedTasks)\n  }\n\n  /// dnd-kit \n  const columnsID = useMemo(() => columns.map(el => el.id), [columns]);\n  const [activeColumn, setActiveColumn] = useState(null);\n  const [activeTask, setActiveTask] = useState(null);\n  //managing the area from where dnd starts to work, just move for this 'distance', to provide work other buttons\n  const sensors = useSensors(useSensor(PointerSensor, {\n    activationConstraint: {\n      distance: 3,\n    }\n  }));\n\n  function onDragStart(event) {\n    if (event.active.data.current?.type === 'column') {\n      setActiveColumn(event.active.data.current.id)\n      return\n    }\n    if (event.active.data.current?.type === 'task') {\n      setActiveTask(event.active.data.current.task)\n      return\n    }\n  }\n  function onDragEnd(event) {\n    setActiveTask(null)\n    setActiveColumn(null)\n\n    const {active,over} = event; /// {active, over}\n\n    if (!over) return\n    \n    const activeId = active.id;  /// active\n    const overId = over.id;\n\n    if ( activeId === overId) return\n\n    setColumns(columns => {\n      const draggindColumn = columns.findIndex(el => el.id === activeId)\n      const overColumn = columns.findIndex(el => el.id === overId)\n      return arrayMove(columns, draggindColumn, overColumn)\n    })\n  }\n  function onDragOver(event) {\n    const {active,over} = event; /// {active, over}\n\n    if (!over) return\n    \n    const activeId = active.id;  /// active\n    const overId = over.id;\n\n    if ( activeId === overId) return\n\n    if (!activeTask) return\n\n    const isActiveTask = active.data.current.type === 'task'\n    const isOverTask = over.data.current.type === 'task'\n    /// dropping a task over another task\n    if (isActiveTask && isOverTask) {\n      setTasks(tasks => {\n        const activeIndex = tasks.findIndex(el => el.id === activeId)\n        const overIndex = tasks.findIndex(el => el.id === overId)\n\n        tasks[activeIndex].idColumn = tasks[overIndex].idColumn\n\n        return arrayMove(tasks, activeIndex, overIndex)\n      })\n    }\n    /// dropping a task over am ampty other column\n    const isOverColumn = over.data.current.type === 'column';\n    setActiveColumn(null)\n\n    if (isActiveTask && isOverColumn) {\n      setTasks(tasks => {\n        const activeIndex = tasks.findIndex(el => el.id === activeId)\n\n        tasks[activeIndex].idColumn = overId\n\n        return arrayMove(tasks, activeIndex, activeIndex)\n      })\n    }\n  }\n  /// dnd-kit end\n\n\n  // useEffect(() => {\n  //   if (!user) localStorage.setItem('kanban-board-columns', JSON.stringify(columns));\n  // }, [columns, user])\n  // useEffect(() => {\n  //   localStorage.setItem('kanban-board-tasks', JSON.stringify(tasks));\n  // }, [tasks])\n \n  // useEffect(() => {\n  //   onAuthStateChanged(auth, (user) => {\n  //     if (user) {\n  //       // User is signed in, see docs for a list of available properties\n  //       // https://firebase.google.com/docs/reference/js/auth.user\n  //       const uid = user.uid;\n  //       const email = user.email;\n  //       dispatch(logIn({email:email,id:uid}))\n  //       getInitialDataDB({id:uid, str:'columns'}).then((res)=>setColumns(res))\n        \n  //     } else {   // User is signed out\n  //       setColumns(getInitialDataLS('kanban-board-columns'))\n  //     } \n  //   });\n  // },[])\n  // useEffect(() => {\n   \n  //   onAuthStateChanged(auth, (user) => {\n  //     if (user) {\n  //       // User is signed in, see docs for a list of available properties\n  //       // https://firebase.google.com/docs/reference/js/auth.user\n  //       const uid = user.uid;\n  //       const email = user.email;\n  //       dispatch(logIn({email:email,id:uid}))\n  //       id = uid\n  //       user = true\n  //     }\n  //     console.log('useEffect string 193' )\n  //   });\n  // },[])\n\n  return (\n    <DndContext onDragStart={onDragStart} onDragEnd={onDragEnd} onDragOver={onDragOver} sensors={sensors}>\n\n      {userHere ? <Header handleLogOut={handleLogOut} /> : <Popup \n      handleLogIn={handleLogIn} \n      handleCreatNewAccount={handleCreatNewAccount} \n      handleOpenClick={handleOpenClick} \n      handleCloseCLick={handleCloseCLick} \n      isOpen={isOpen} \n      isOpenLogIn={isOpenLogIn} \n      isOpenNewAccount={isOpenNewAccount} \n      handleOpenFormLogIn={handleOpenFormLogIn} \n      handleOpenFormNewAccount={handleOpenFormNewAccount} />}\n\n      <div className=\"app\">\n        <SortableContext items={columnsID}>\n        {columns.map(el => {\n          return <Column\n            key={el.id}\n            id={el.id}\n            name={el.name}\n            handleClick={handleClickDeleteColumn}\n            updateColumnName={updateColumnName}\n            handleAddTask={handleAddTask}\n            tasks={tasks.filter(task => task.idColumn === el.id )}\n            handleDeleteTask={handleDeleteTask}\n            updateTask={updateTask}\n          />\n        })}\n        </SortableContext>\n        \n        <Button   \n          content='Add column'\n          handleClick={() => {handleClickAddColumn(); }}\n          type='add'\n        />\n\n      </div>\n      {/* patch */} {activeColumn ? <></> : <></>} {/* patch end */}\n      <Footer />\n    </DndContext>\n  );\n\n  function handleCreatNewAccount({email,password}) {\n    creatUser({email, password})\n    .then(user => {\n      console.log(user)\n      setIsOpenLogIn(true)\n      setIsOpenNewAccount(false)\n    })\n    .catch(err => {\n      console.log(err)\n    })\n  }\n  function handleLogIn({email,password}) {\n    logInUser({email, password})\n    .then(user => {\n      // setColumns([])\n      setIsOpenLogIn(false)\n      setIsOpen(false)\n      if (user.user) {\n        localStorage.setItem('kanban-token', JSON.stringify(user.user.accessToken))\n        dispatch(logIn({email:email,id:user.user.uid}))\n      }\n    })\n    .catch(err => {\n      console.log('catch', err)\n    })\n  }\n  function handleLogOut() {\n    signOutUser()\n    .then(() => {\n      // setColumns([])\n      dispatch(logOut())\n      localStorage.removeItem('kanban-token');\n    })\n    .catch()\n  }\n  function handleOpenClick() {\n    setIsOpen(true);\n  }\n  function handleCloseCLick() {\n    setIsOpen(false);\n    setIsOpenLogIn(false);\n    setIsOpenNewAccount(false);\n  }\n  function handleOpenFormLogIn(e) {\n    e.preventDefault();\n    setIsOpenNewAccount(false)\n    setIsOpenLogIn(true)\n  }\n  function handleOpenFormNewAccount(e) {\n    e.preventDefault();\n    setIsOpenLogIn(false)\n    setIsOpenNewAccount(true)\n  }\n\n  function checkUserOnline() {\n    onAuthStateChanged(auth, (user) => {\n      if (user) {\n        const uid = user.uid;\n        const email = user.email;\n        dispatch(logIn({email:email,id:uid}))\n        id = user.uid;\n        userHere= true;\n      } else {\n        handleLogOut();\n      }\n    });\n  }\n\n  function getInitialData() {\n    //let user = false;\n    checkUserOnline();\n\n    console.log('str292 getInitialData - user', userHere)\n    console.log('str293 getInitialData - id', id)\n    if (userHere) {\n      getInitialDataDB({id:id, str:'columns'}).then((res)=> res)\n    } else {   // User is signed out\n      return getInitialDataLS('kanban-board-columns')\n    } \n  }\n  async function getInitialDataDB({id, str}) {  /// 'columns'  'tasks'\n    return  await getData({userID:id, category:str})\n      .then(snapshot => {\n        if (snapshot.exists()) {\n          console.log('snapshot.val',Object.entries(snapshot.val()).map(el=> [el[0],Object.values(el[1])[0]]));\n          const data = Object.entries(snapshot.val()).map(el=> [el[0],Object.values(el[1])[0]])\n          let data2 =[]\n          for (let i of data) {\n            data2.push({id:i[0],name:i[1]})\n          }\n\n          // for (let i of snapshot.val()) {\n\n          // }\n          return data2\n        } else {\n          console.log(\"No data available\", columns);\n          return []\n        }\n      })\n      .catch() \n  }\n  function getInitialDataLS(str) {  /// 'kanban-board-columns' 'kanban-board-tasks'\n    return (JSON.parse(localStorage.getItem(str)) || []);\n  }\n  function addNewColumnDB({userID, column='column'}) {\n    addNewColumn({userID, column})\n    .then(res=> console.log('adddddd', res))\n    .then(snapshot => {\n      if (snapshot.exists()) {\n        console.log('addNewColumnDB',snapshot.val());\n        return snapshot.val()\n      } else {\n        console.log(\"No snapshot in addNewColumnDB\");\n      }\n    })\n    .catch()\n  }\n  // function addNewColumnLS(str, state ) {  /// 'kanban-board-columns' 'kanban-board-tasks', columns or tasks\n  //   console.log('addNewColumnLS', columns)\n  //   localStorage.setItem(str, JSON.stringify(state))\n  // }\n}\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AACpD,OAAO,uBAAuB;AAC9B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,MAAM,SAAS;AAC3B,SAASC,UAAU,EAAEC,aAAa,EAAEC,SAAS,EAAEC,UAAU,QAAQ,eAAe;AAChF,SAAQC,eAAe,EAAEC,SAAS,QAAO,mBAAmB;AAE5D,SAASC,KAAK,EAAEC,MAAM,EAAEC,UAAU,QAAQ,iBAAiB;AAC3D,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,OAAO,EAAEC,kBAAkB,QAAQ,eAAe;AAC3D,SAASC,SAAS,EAAEC,SAAS,EAAEC,WAAW,EAAEC,OAAO,EAAEC,YAAY,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE3F,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAMC,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAC9B,MAAMgB,IAAI,GAAGd,OAAO,CAAC,CAAC;EAEtB,IAAIe,QAAQ,GAAG,KAAK;EACpB,IAAIC,EAAE,CAAC,CAAE;;EAET,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGnC,QAAQ,CAACoC,cAAc,CAAC,CAAC,CAAC;EACxD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGtC,QAAQ,CAACuC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,oBAAoB,CAAC,CAAC,IAAI,EAAE,CAAC;EAEhGC,OAAO,CAACC,GAAG,CAAC,SAAS,EAACV,OAAO,CAAC;EAE9B,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAG9C,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC7C,MAAM,CAAC+C,WAAW,EAAEC,cAAc,CAAC,GAAGhD,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACiD,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGlD,QAAQ,CAAC,KAAK,CAAC;EAE/D,SAASmD,oBAAoBA,CAAA,EAAG;IAC9B,IAAInB,QAAQ,EAAE;MACZoB,cAAc,CAAC;QAACC,MAAM,EAACpB;MAAE,CAAC,CAAC;IAC7B,CAAC,MAAM;MACLE,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAE;QAACoB,IAAI,EAAE,SAAS,IAAIpB,OAAO,CAACqB,MAAM,GAAG,CAAC,CAAC;QAAEtB,EAAE,EAAEuB,IAAI,CAACC,IAAI,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAC,MAAM;MAAC,CAAC,CAAE,CAAC;IAE1G;EACF;EAEA,IAAIC,uBAAuB,GAAI1B,EAAE,IAAK;IACpC,MAAM2B,eAAe,GAAG1B,OAAO,CAAC2B,MAAM,CAAEC,EAAE,IAAIA,EAAE,CAAC7B,EAAE,KAAKA,EAAE,CAAC;IAC3D,MAAM8B,aAAa,GAAG1B,KAAK,CAACwB,MAAM,CAACG,IAAI,IAAIA,IAAI,CAACC,QAAQ,KAAKhC,EAAE,CAAC;IAChEE,UAAU,CAACyB,eAAe,CAAC;IAC3BtB,QAAQ,CAACyB,aAAa,CAAC;EACzB,CAAC;EAED,IAAIG,gBAAgB,GAAGA,CAAC;IAACjC,EAAE;IAAEkC;EAAK,CAAC,KAAK;IACtC,MAAMC,MAAM,GAAGlC,OAAO,CAACmC,GAAG,CAACP,EAAE,IAAI;MAC/B,IAAIA,EAAE,CAAC7B,EAAE,KAAKA,EAAE,EAAG,OAAO6B,EAAE;MAC5B,OAAO;QAAC,GAAGA,EAAE;QAAER,IAAI,EAACa;MAAK,CAAC;IAC5B,CAAC,CAAC;IACFhC,UAAU,CAACiC,MAAM,CAAC;EACpB,CAAC;EAED,IAAIE,aAAa,GAAIrC,EAAE,IAAK;IAC1B,MAAMsC,OAAO,GAAG;MACdN,QAAQ,EAAEhC,EAAE;MACZA,EAAE,EAAEuB,IAAI,CAACC,IAAI,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAC,MAAM,CAAC;MACnCc,OAAO,EAAE,OAAO,IAAInC,KAAK,CAACkB,MAAM,GAAG,CAAC;IACtC,CAAC;IACDjB,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEkC,OAAO,CAAC,CAAC;EAC/B,CAAC;EAED,IAAIE,gBAAgB,GAAIxC,EAAE,IAAK;IAC7B,MAAM8B,aAAa,GAAG1B,KAAK,CAACwB,MAAM,CAACG,IAAI,IAAIA,IAAI,CAAC/B,EAAE,KAAKA,EAAE,CAAC;IAC1DK,QAAQ,CAACyB,aAAa,CAAC;EACzB,CAAC;EAED,IAAIW,UAAU,GAAGA,CAAC;IAACzC,EAAE;IAAEkC;EAAK,CAAC,KAAK;IAChC,MAAMQ,YAAY,GAAGtC,KAAK,CAACgC,GAAG,CAACL,IAAI,IAAI;MACrC,IAAIA,IAAI,CAAC/B,EAAE,KAAKA,EAAE,EAAE,OAAO+B,IAAI;MAC/B,OAAO;QAAC,GAAGA,IAAI;QAAEQ,OAAO,EAACL;MAAK,CAAC;IACjC,CAAC,CAAC;IACF7B,QAAQ,CAACqC,YAAY,CAAC;EACxB,CAAC;;EAED;EACA,MAAMC,SAAS,GAAG7E,OAAO,CAAC,MAAMmC,OAAO,CAACmC,GAAG,CAACP,EAAE,IAAIA,EAAE,CAAC7B,EAAE,CAAC,EAAE,CAACC,OAAO,CAAC,CAAC;EACpE,MAAM,CAAC2C,YAAY,EAAEC,eAAe,CAAC,GAAG9E,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAAC+E,UAAU,EAAEC,aAAa,CAAC,GAAGhF,QAAQ,CAAC,IAAI,CAAC;EAClD;EACA,MAAMiF,OAAO,GAAGxE,UAAU,CAACD,SAAS,CAACD,aAAa,EAAE;IAClD2E,oBAAoB,EAAE;MACpBC,QAAQ,EAAE;IACZ;EACF,CAAC,CAAC,CAAC;EAEH,SAASC,WAAWA,CAACC,KAAK,EAAE;IAAA,IAAAC,qBAAA,EAAAC,sBAAA;IAC1B,IAAI,EAAAD,qBAAA,GAAAD,KAAK,CAACG,MAAM,CAACC,IAAI,CAACC,OAAO,cAAAJ,qBAAA,uBAAzBA,qBAAA,CAA2BK,IAAI,MAAK,QAAQ,EAAE;MAChDb,eAAe,CAACO,KAAK,CAACG,MAAM,CAACC,IAAI,CAACC,OAAO,CAACzD,EAAE,CAAC;MAC7C;IACF;IACA,IAAI,EAAAsD,sBAAA,GAAAF,KAAK,CAACG,MAAM,CAACC,IAAI,CAACC,OAAO,cAAAH,sBAAA,uBAAzBA,sBAAA,CAA2BI,IAAI,MAAK,MAAM,EAAE;MAC9CX,aAAa,CAACK,KAAK,CAACG,MAAM,CAACC,IAAI,CAACC,OAAO,CAAC1B,IAAI,CAAC;MAC7C;IACF;EACF;EACA,SAAS4B,SAASA,CAACP,KAAK,EAAE;IACxBL,aAAa,CAAC,IAAI,CAAC;IACnBF,eAAe,CAAC,IAAI,CAAC;IAErB,MAAM;MAACU,MAAM;MAACK;IAAI,CAAC,GAAGR,KAAK,CAAC,CAAC;;IAE7B,IAAI,CAACQ,IAAI,EAAE;IAEX,MAAMC,QAAQ,GAAGN,MAAM,CAACvD,EAAE,CAAC,CAAE;IAC7B,MAAM8D,MAAM,GAAGF,IAAI,CAAC5D,EAAE;IAEtB,IAAK6D,QAAQ,KAAKC,MAAM,EAAE;IAE1B5D,UAAU,CAACD,OAAO,IAAI;MACpB,MAAM8D,cAAc,GAAG9D,OAAO,CAAC+D,SAAS,CAACnC,EAAE,IAAIA,EAAE,CAAC7B,EAAE,KAAK6D,QAAQ,CAAC;MAClE,MAAMI,UAAU,GAAGhE,OAAO,CAAC+D,SAAS,CAACnC,EAAE,IAAIA,EAAE,CAAC7B,EAAE,KAAK8D,MAAM,CAAC;MAC5D,OAAOpF,SAAS,CAACuB,OAAO,EAAE8D,cAAc,EAAEE,UAAU,CAAC;IACvD,CAAC,CAAC;EACJ;EACA,SAASC,UAAUA,CAACd,KAAK,EAAE;IACzB,MAAM;MAACG,MAAM;MAACK;IAAI,CAAC,GAAGR,KAAK,CAAC,CAAC;;IAE7B,IAAI,CAACQ,IAAI,EAAE;IAEX,MAAMC,QAAQ,GAAGN,MAAM,CAACvD,EAAE,CAAC,CAAE;IAC7B,MAAM8D,MAAM,GAAGF,IAAI,CAAC5D,EAAE;IAEtB,IAAK6D,QAAQ,KAAKC,MAAM,EAAE;IAE1B,IAAI,CAAChB,UAAU,EAAE;IAEjB,MAAMqB,YAAY,GAAGZ,MAAM,CAACC,IAAI,CAACC,OAAO,CAACC,IAAI,KAAK,MAAM;IACxD,MAAMU,UAAU,GAAGR,IAAI,CAACJ,IAAI,CAACC,OAAO,CAACC,IAAI,KAAK,MAAM;IACpD;IACA,IAAIS,YAAY,IAAIC,UAAU,EAAE;MAC9B/D,QAAQ,CAACD,KAAK,IAAI;QAChB,MAAMiE,WAAW,GAAGjE,KAAK,CAAC4D,SAAS,CAACnC,EAAE,IAAIA,EAAE,CAAC7B,EAAE,KAAK6D,QAAQ,CAAC;QAC7D,MAAMS,SAAS,GAAGlE,KAAK,CAAC4D,SAAS,CAACnC,EAAE,IAAIA,EAAE,CAAC7B,EAAE,KAAK8D,MAAM,CAAC;QAEzD1D,KAAK,CAACiE,WAAW,CAAC,CAACrC,QAAQ,GAAG5B,KAAK,CAACkE,SAAS,CAAC,CAACtC,QAAQ;QAEvD,OAAOtD,SAAS,CAAC0B,KAAK,EAAEiE,WAAW,EAAEC,SAAS,CAAC;MACjD,CAAC,CAAC;IACJ;IACA;IACA,MAAMC,YAAY,GAAGX,IAAI,CAACJ,IAAI,CAACC,OAAO,CAACC,IAAI,KAAK,QAAQ;IACxDb,eAAe,CAAC,IAAI,CAAC;IAErB,IAAIsB,YAAY,IAAII,YAAY,EAAE;MAChClE,QAAQ,CAACD,KAAK,IAAI;QAChB,MAAMiE,WAAW,GAAGjE,KAAK,CAAC4D,SAAS,CAACnC,EAAE,IAAIA,EAAE,CAAC7B,EAAE,KAAK6D,QAAQ,CAAC;QAE7DzD,KAAK,CAACiE,WAAW,CAAC,CAACrC,QAAQ,GAAG8B,MAAM;QAEpC,OAAOpF,SAAS,CAAC0B,KAAK,EAAEiE,WAAW,EAAEA,WAAW,CAAC;MACnD,CAAC,CAAC;IACJ;EACF;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACE7E,OAAA,CAACnB,UAAU;IAAC8E,WAAW,EAAEA,WAAY;IAACQ,SAAS,EAAEA,SAAU;IAACO,UAAU,EAAEA,UAAW;IAAClB,OAAO,EAAEA,OAAQ;IAAAwB,QAAA,GAElGzE,QAAQ,gBAAGP,OAAA,CAACxB,MAAM;MAACyG,YAAY,EAAEA;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAAGrF,OAAA,CAACpB,KAAK;MAC3D0G,WAAW,EAAEA,WAAY;MACzBC,qBAAqB,EAAEA,qBAAsB;MAC7CC,eAAe,EAAEA,eAAgB;MACjCC,gBAAgB,EAAEA,gBAAiB;MACnCrE,MAAM,EAAEA,MAAO;MACfE,WAAW,EAAEA,WAAY;MACzBE,gBAAgB,EAAEA,gBAAiB;MACnCkE,mBAAmB,EAAEA,mBAAoB;MACzCC,wBAAwB,EAAEA;IAAyB;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEtDrF,OAAA;MAAK4F,SAAS,EAAC,KAAK;MAAAZ,QAAA,gBAClBhF,OAAA,CAACf,eAAe;QAAC4G,KAAK,EAAE1C,SAAU;QAAA6B,QAAA,EACjCvE,OAAO,CAACmC,GAAG,CAACP,EAAE,IAAI;UACjB,oBAAOrC,OAAA,CAACtB,MAAM;YAEZ8B,EAAE,EAAE6B,EAAE,CAAC7B,EAAG;YACVqB,IAAI,EAAEQ,EAAE,CAACR,IAAK;YACdiE,WAAW,EAAE5D,uBAAwB;YACrCO,gBAAgB,EAAEA,gBAAiB;YACnCI,aAAa,EAAEA,aAAc;YAC7BjC,KAAK,EAAEA,KAAK,CAACwB,MAAM,CAACG,IAAI,IAAIA,IAAI,CAACC,QAAQ,KAAKH,EAAE,CAAC7B,EAAG,CAAE;YACtDwC,gBAAgB,EAAEA,gBAAiB;YACnCC,UAAU,EAAEA;UAAW,GARlBZ,EAAE,CAAC7B,EAAE;YAAA0E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OASX,CAAC;QACJ,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACe,CAAC,eAElBrF,OAAA,CAACvB,MAAM;QACLsE,OAAO,EAAC,YAAY;QACpB+C,WAAW,EAAEA,CAAA,KAAM;UAACpE,oBAAoB,CAAC,CAAC;QAAE,CAAE;QAC9CwC,IAAI,EAAC;MAAK;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEC,CAAC,EACO,GAAC,EAACjC,YAAY,gBAAGpD,OAAA,CAAAE,SAAA,mBAAI,CAAC,gBAAGF,OAAA,CAAAE,SAAA,mBAAI,CAAC,EAAC,GAAC,eAC7CF,OAAA,CAACrB,MAAM;MAAAuG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;EAGf,SAASE,qBAAqBA,CAAC;IAACQ,KAAK;IAACC;EAAQ,CAAC,EAAE;IAC/CtG,SAAS,CAAC;MAACqG,KAAK;MAAEC;IAAQ,CAAC,CAAC,CAC3BC,IAAI,CAACC,IAAI,IAAI;MACZhF,OAAO,CAACC,GAAG,CAAC+E,IAAI,CAAC;MACjB3E,cAAc,CAAC,IAAI,CAAC;MACpBE,mBAAmB,CAAC,KAAK,CAAC;IAC5B,CAAC,CAAC,CACD0E,KAAK,CAACC,GAAG,IAAI;MACZlF,OAAO,CAACC,GAAG,CAACiF,GAAG,CAAC;IAClB,CAAC,CAAC;EACJ;EACA,SAASd,WAAWA,CAAC;IAACS,KAAK;IAACC;EAAQ,CAAC,EAAE;IACrCrG,SAAS,CAAC;MAACoG,KAAK;MAAEC;IAAQ,CAAC,CAAC,CAC3BC,IAAI,CAACC,IAAI,IAAI;MACZ;MACA3E,cAAc,CAAC,KAAK,CAAC;MACrBF,SAAS,CAAC,KAAK,CAAC;MAChB,IAAI6E,IAAI,CAACA,IAAI,EAAE;QACblF,YAAY,CAACqF,OAAO,CAAC,cAAc,EAAEvF,IAAI,CAACwF,SAAS,CAACJ,IAAI,CAACA,IAAI,CAACK,WAAW,CAAC,CAAC;QAC3ElG,QAAQ,CAAClB,KAAK,CAAC;UAAC4G,KAAK,EAACA,KAAK;UAACvF,EAAE,EAAC0F,IAAI,CAACA,IAAI,CAACM;QAAG,CAAC,CAAC,CAAC;MACjD;IACF,CAAC,CAAC,CACDL,KAAK,CAACC,GAAG,IAAI;MACZlF,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEiF,GAAG,CAAC;IAC3B,CAAC,CAAC;EACJ;EACA,SAASnB,YAAYA,CAAA,EAAG;IACtBrF,WAAW,CAAC,CAAC,CACZqG,IAAI,CAAC,MAAM;MACV;MACA5F,QAAQ,CAACjB,MAAM,CAAC,CAAC,CAAC;MAClB4B,YAAY,CAACyF,UAAU,CAAC,cAAc,CAAC;IACzC,CAAC,CAAC,CACDN,KAAK,CAAC,CAAC;EACV;EACA,SAASX,eAAeA,CAAA,EAAG;IACzBnE,SAAS,CAAC,IAAI,CAAC;EACjB;EACA,SAASoE,gBAAgBA,CAAA,EAAG;IAC1BpE,SAAS,CAAC,KAAK,CAAC;IAChBE,cAAc,CAAC,KAAK,CAAC;IACrBE,mBAAmB,CAAC,KAAK,CAAC;EAC5B;EACA,SAASiE,mBAAmBA,CAACgB,CAAC,EAAE;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBlF,mBAAmB,CAAC,KAAK,CAAC;IAC1BF,cAAc,CAAC,IAAI,CAAC;EACtB;EACA,SAASoE,wBAAwBA,CAACe,CAAC,EAAE;IACnCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBpF,cAAc,CAAC,KAAK,CAAC;IACrBE,mBAAmB,CAAC,IAAI,CAAC;EAC3B;EAEA,SAASmF,eAAeA,CAAA,EAAG;IACzBnH,kBAAkB,CAACa,IAAI,EAAG4F,IAAI,IAAK;MACjC,IAAIA,IAAI,EAAE;QACR,MAAMM,GAAG,GAAGN,IAAI,CAACM,GAAG;QACpB,MAAMT,KAAK,GAAGG,IAAI,CAACH,KAAK;QACxB1F,QAAQ,CAAClB,KAAK,CAAC;UAAC4G,KAAK,EAACA,KAAK;UAACvF,EAAE,EAACgG;QAAG,CAAC,CAAC,CAAC;QACrChG,EAAE,GAAG0F,IAAI,CAACM,GAAG;QACbjG,QAAQ,GAAE,IAAI;MAChB,CAAC,MAAM;QACL0E,YAAY,CAAC,CAAC;MAChB;IACF,CAAC,CAAC;EACJ;EAEA,SAAStE,cAAcA,CAAA,EAAG;IACxB;IACAiG,eAAe,CAAC,CAAC;IAEjB1F,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEZ,QAAQ,CAAC;IACrDW,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEX,EAAE,CAAC;IAC7C,IAAID,QAAQ,EAAE;MACZsG,gBAAgB,CAAC;QAACrG,EAAE,EAACA,EAAE;QAAEsG,GAAG,EAAC;MAAS,CAAC,CAAC,CAACb,IAAI,CAAEc,GAAG,IAAIA,GAAG,CAAC;IAC5D,CAAC,MAAM;MAAI;MACT,OAAOC,gBAAgB,CAAC,sBAAsB,CAAC;IACjD;EACF;EACA,eAAeH,gBAAgBA,CAAC;IAACrG,EAAE;IAAEsG;EAAG,CAAC,EAAE;IAAG;IAC5C,OAAQ,MAAMjH,OAAO,CAAC;MAAC+B,MAAM,EAACpB,EAAE;MAAEyG,QAAQ,EAACH;IAAG,CAAC,CAAC,CAC7Cb,IAAI,CAACiB,QAAQ,IAAI;MAChB,IAAIA,QAAQ,CAACC,MAAM,CAAC,CAAC,EAAE;QACrBjG,OAAO,CAACC,GAAG,CAAC,cAAc,EAACiG,MAAM,CAACC,OAAO,CAACH,QAAQ,CAACI,GAAG,CAAC,CAAC,CAAC,CAAC1E,GAAG,CAACP,EAAE,IAAG,CAACA,EAAE,CAAC,CAAC,CAAC,EAAC+E,MAAM,CAACG,MAAM,CAAClF,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACpG,MAAM2B,IAAI,GAAGoD,MAAM,CAACC,OAAO,CAACH,QAAQ,CAACI,GAAG,CAAC,CAAC,CAAC,CAAC1E,GAAG,CAACP,EAAE,IAAG,CAACA,EAAE,CAAC,CAAC,CAAC,EAAC+E,MAAM,CAACG,MAAM,CAAClF,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACrF,IAAImF,KAAK,GAAE,EAAE;QACb,KAAK,IAAIC,CAAC,IAAIzD,IAAI,EAAE;UAClBwD,KAAK,CAACE,IAAI,CAAC;YAAClH,EAAE,EAACiH,CAAC,CAAC,CAAC,CAAC;YAAC5F,IAAI,EAAC4F,CAAC,CAAC,CAAC;UAAC,CAAC,CAAC;QACjC;;QAEA;;QAEA;QACA,OAAOD,KAAK;MACd,CAAC,MAAM;QACLtG,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEV,OAAO,CAAC;QACzC,OAAO,EAAE;MACX;IACF,CAAC,CAAC,CACD0F,KAAK,CAAC,CAAC;EACZ;EACA,SAASa,gBAAgBA,CAACF,GAAG,EAAE;IAAG;IAChC,OAAQhG,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC6F,GAAG,CAAC,CAAC,IAAI,EAAE;EACrD;EACA,SAASnF,cAAcA,CAAC;IAACC,MAAM;IAAE+F,MAAM,GAAC;EAAQ,CAAC,EAAE;IACjD7H,YAAY,CAAC;MAAC8B,MAAM;MAAE+F;IAAM,CAAC,CAAC,CAC7B1B,IAAI,CAACc,GAAG,IAAG7F,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE4F,GAAG,CAAC,CAAC,CACvCd,IAAI,CAACiB,QAAQ,IAAI;MAChB,IAAIA,QAAQ,CAACC,MAAM,CAAC,CAAC,EAAE;QACrBjG,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAC+F,QAAQ,CAACI,GAAG,CAAC,CAAC,CAAC;QAC5C,OAAOJ,QAAQ,CAACI,GAAG,CAAC,CAAC;MACvB,CAAC,MAAM;QACLpG,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;MAC9C;IACF,CAAC,CAAC,CACDgF,KAAK,CAAC,CAAC;EACV;EACA;EACA;EACA;EACA;AACF;AAAC/F,EAAA,CA3VuBD,GAAG;EAAA,QACRb,WAAW,EAkEZN,UAAU,EAACD,SAAS;AAAA;AAAA6I,EAAA,GAnEdzH,GAAG;AAAA,IAAAyH,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}