{"ast":null,"code":"var _jsxFileName = \"/Users/a1/projects/with mentor practice/kanban-board/src/components/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport '../blocks/app/app.css';\nimport Button from './Button';\nimport Column from './Column';\nimport { DndContext } from '@dnd-kit/core';\nimport { SortableContext } from '@dnd-kit/sortable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [columns, setColumns] = useState(JSON.parse(localStorage.getItem('kanban-board')) || []);\n  let handleClickAddColumn = () => {\n    setColumns([...columns, {\n      name: 'Column' + (columns.length + 1),\n      id: Math.ceil(Math.random() * 100000)\n    }]);\n    // localStorage.setItem('kanban-board', JSON.stringify(columns));\n  };\n  let handleClickDeleteColumn = id => {\n    let x = columns.filter(el => el.id !== id);\n    setColumns(x);\n  };\n  useEffect(() => {\n    localStorage.setItem('kanban-board', JSON.stringify(columns));\n  }, [columns]);\n  return /*#__PURE__*/_jsxDEV(DndContext, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(SortableContext, {\n        children: columns.map(el => {\n          return /*#__PURE__*/_jsxDEV(Column, {\n            id: el.id,\n            name: el.name,\n            handleClick: handleClickDeleteColumn\n          }, el.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 18\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        content: \"Add column\",\n        handleClick: handleClickAddColumn,\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"JT6DJsAHudJMSnYBIpoRYpmaPDo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Button","Column","DndContext","SortableContext","jsxDEV","_jsxDEV","App","_s","columns","setColumns","JSON","parse","localStorage","getItem","handleClickAddColumn","name","length","id","Math","ceil","random","handleClickDeleteColumn","x","filter","el","setItem","stringify","children","className","map","handleClick","fileName","_jsxFileName","lineNumber","columnNumber","content","type","_c","$RefreshReg$"],"sources":["/Users/a1/projects/with mentor practice/kanban-board/src/components/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport '../blocks/app/app.css';\nimport Button from './Button';\nimport Column from './Column';\nimport { DndContext } from '@dnd-kit/core';\nimport {SortableContext} from '@dnd-kit/sortable';\n\nfunction App() {\n\n  const [columns, setColumns] = useState(JSON.parse(localStorage.getItem('kanban-board')) || []);\n\n  let handleClickAddColumn = () => {\n    setColumns([...columns, {name: 'Column' + (columns.length + 1), id: Math.ceil(Math.random()*100000)} ]);\n    // localStorage.setItem('kanban-board', JSON.stringify(columns));\n  }\n\n  let handleClickDeleteColumn = (id) => {\n    let x = columns.filter( el => el.id !== id)\n    setColumns(x)\n  }\n\n  useEffect(() => {\n    localStorage.setItem('kanban-board', JSON.stringify(columns));\n  }, [columns])\n\n  return (\n    <DndContext>\n      <div className=\"app\">\n        <SortableContext>\n        {columns.map(el => {\n          return <Column\n            key={el.id}\n            id={el.id}\n            name={el.name}\n            handleClick={handleClickDeleteColumn}\n          />\n        })}\n        </SortableContext>\n        \n        <Button   \n          content='Add column'\n          handleClick={handleClickAddColumn}\n          type='text'\n        />\n\n      </div>\n    </DndContext>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,uBAAuB;AAC9B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAAQC,eAAe,QAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAACW,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,CAAC,IAAI,EAAE,CAAC;EAE9F,IAAIC,oBAAoB,GAAGA,CAAA,KAAM;IAC/BL,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAE;MAACO,IAAI,EAAE,QAAQ,IAAIP,OAAO,CAACQ,MAAM,GAAG,CAAC,CAAC;MAAEC,EAAE,EAAEC,IAAI,CAACC,IAAI,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAC,MAAM;IAAC,CAAC,CAAE,CAAC;IACvG;EACF,CAAC;EAED,IAAIC,uBAAuB,GAAIJ,EAAE,IAAK;IACpC,IAAIK,CAAC,GAAGd,OAAO,CAACe,MAAM,CAAEC,EAAE,IAAIA,EAAE,CAACP,EAAE,KAAKA,EAAE,CAAC;IAC3CR,UAAU,CAACa,CAAC,CAAC;EACf,CAAC;EAEDxB,SAAS,CAAC,MAAM;IACdc,YAAY,CAACa,OAAO,CAAC,cAAc,EAAEf,IAAI,CAACgB,SAAS,CAAClB,OAAO,CAAC,CAAC;EAC/D,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EAEb,oBACEH,OAAA,CAACH,UAAU;IAAAyB,QAAA,eACTtB,OAAA;MAAKuB,SAAS,EAAC,KAAK;MAAAD,QAAA,gBAClBtB,OAAA,CAACF,eAAe;QAAAwB,QAAA,EACfnB,OAAO,CAACqB,GAAG,CAACL,EAAE,IAAI;UACjB,oBAAOnB,OAAA,CAACJ,MAAM;YAEZgB,EAAE,EAAEO,EAAE,CAACP,EAAG;YACVF,IAAI,EAAES,EAAE,CAACT,IAAK;YACde,WAAW,EAAET;UAAwB,GAHhCG,EAAE,CAACP,EAAE;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAIX,CAAC;QACJ,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACe,CAAC,eAElB7B,OAAA,CAACL,MAAM;QACLmC,OAAO,EAAC,YAAY;QACpBL,WAAW,EAAEhB,oBAAqB;QAClCsB,IAAI,EAAC;MAAM;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEjB;AAAC3B,EAAA,CAzCQD,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AA2CZ,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}