{"ast":null,"code":"var _jsxFileName = \"/Users/a1/projects/with mentor practice/kanban-board/src/components/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useMemo, useState } from 'react';\nimport '../blocks/app/app.css';\nimport Header from './Header';\nimport Button from './Button';\nimport Column from './Column';\nimport Footer from './Footer';\nimport Popup from './Popup';\nimport { DndContext, PointerSensor, useSensor, useSensors } from '@dnd-kit/core';\nimport { SortableContext, arrayMove } from '@dnd-kit/sortable';\nimport { logIn, logOut, selectUser } from '../context/user';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\nimport { creatUser, logInUser, signOutUser, getData, addNewColumn } from '../api/firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const {\n    user,\n    id\n  } = useSelector(selectUser); // initially check isAnyUserLogIN\n\n  const [columns, setColumns] = useState([]);\n  const [tasks, setTasks] = useState(JSON.parse(localStorage.getItem('kanban-board-tasks')) || []);\n  console.log(columns);\n  const [isOpen, setIsOpen] = useState(false); /// popup\n  const [isOpenLogIn, setIsOpenLogIn] = useState(false);\n  const [isOpenNewAccount, setIsOpenNewAccount] = useState(false);\n  async function handleClickAddColumn() {\n    if (user) {\n      addNewColumnDB({\n        userID: id\n      });\n    } else {\n      const state = new Promise(resolve => resolve('add'));\n      await state.then(() => setColumns([...columns, {\n        name: 'Column ' + (columns.length + 1),\n        id: Math.ceil(Math.random() * 100000)\n      }])).then(() => localStorage.setItem('kanban-board-columns', JSON.stringify(columns)));\n    }\n  }\n  let handleClickDeleteColumn = id => {\n    const filteredColumns = columns.filter(el => el.id !== id);\n    const filteredTasks = tasks.filter(task => task.idColumn !== id);\n    setColumns(filteredColumns);\n    setTasks(filteredTasks);\n  };\n  let updateColumnName = ({\n    id,\n    input\n  }) => {\n    const update = columns.map(el => {\n      if (el.id !== id) return el;\n      return {\n        ...el,\n        name: input\n      };\n    });\n    setColumns(update);\n  };\n  let handleAddTask = id => {\n    const newTask = {\n      idColumn: id,\n      id: Math.ceil(Math.random() * 100000),\n      content: 'Task ' + (tasks.length + 1)\n    };\n    setTasks([...tasks, newTask]);\n  };\n  let handleDeleteTask = id => {\n    const filteredTasks = tasks.filter(task => task.id !== id);\n    setTasks(filteredTasks);\n  };\n  let updateTask = ({\n    id,\n    input\n  }) => {\n    const updatedTasks = tasks.map(task => {\n      if (task.id !== id) return task;\n      return {\n        ...task,\n        content: input\n      };\n    });\n    setTasks(updatedTasks);\n  };\n\n  /// dnd-kit \n  const columnsID = useMemo(() => columns.map(el => el.id), [columns]);\n  const [activeColumn, setActiveColumn] = useState(null);\n  const [activeTask, setActiveTask] = useState(null);\n  //managing the area from where dnd starts to work, just move for this 'distance', to provide work other buttons\n  const sensors = useSensors(useSensor(PointerSensor, {\n    activationConstraint: {\n      distance: 3\n    }\n  }));\n  function onDragStart(event) {\n    var _event$active$data$cu, _event$active$data$cu2;\n    if (((_event$active$data$cu = event.active.data.current) === null || _event$active$data$cu === void 0 ? void 0 : _event$active$data$cu.type) === 'column') {\n      setActiveColumn(event.active.data.current.id);\n      return;\n    }\n    if (((_event$active$data$cu2 = event.active.data.current) === null || _event$active$data$cu2 === void 0 ? void 0 : _event$active$data$cu2.type) === 'task') {\n      setActiveTask(event.active.data.current.task);\n      return;\n    }\n  }\n  function onDragEnd(event) {\n    setActiveTask(null);\n    setActiveColumn(null);\n    const {\n      active,\n      over\n    } = event; /// {active, over}\n\n    if (!over) return;\n    const activeId = active.id; /// active\n    const overId = over.id;\n    if (activeId === overId) return;\n    setColumns(columns => {\n      const draggindColumn = columns.findIndex(el => el.id === activeId);\n      const overColumn = columns.findIndex(el => el.id === overId);\n      return arrayMove(columns, draggindColumn, overColumn);\n    });\n  }\n  function onDragOver(event) {\n    const {\n      active,\n      over\n    } = event; /// {active, over}\n\n    if (!over) return;\n    const activeId = active.id; /// active\n    const overId = over.id;\n    if (activeId === overId) return;\n    if (!activeTask) return;\n    const isActiveTask = active.data.current.type === 'task';\n    const isOverTask = over.data.current.type === 'task';\n    /// dropping a task over another task\n    if (isActiveTask && isOverTask) {\n      setTasks(tasks => {\n        const activeIndex = tasks.findIndex(el => el.id === activeId);\n        const overIndex = tasks.findIndex(el => el.id === overId);\n        tasks[activeIndex].idColumn = tasks[overIndex].idColumn;\n        return arrayMove(tasks, activeIndex, overIndex);\n      });\n    }\n    /// dropping a task over am ampty other column\n    const isOverColumn = over.data.current.type === 'column';\n    setActiveColumn(null);\n    if (isActiveTask && isOverColumn) {\n      setTasks(tasks => {\n        const activeIndex = tasks.findIndex(el => el.id === activeId);\n        tasks[activeIndex].idColumn = overId;\n        return arrayMove(tasks, activeIndex, activeIndex);\n      });\n    }\n  }\n  /// dnd-kit end\n\n  // useEffect(() => {\n  //   if (!user) localStorage.setItem('kanban-board-columns', JSON.stringify(columns));\n  // }, [columns, user])\n  // useEffect(() => {\n  //   localStorage.setItem('kanban-board-tasks', JSON.stringify(tasks));\n  // }, [tasks])\n  const dispatch = useDispatch();\n  const auth = getAuth();\n  useEffect(() => {\n    onAuthStateChanged(auth, user => {\n      if (user) {\n        // User is signed in, see docs for a list of available properties\n        // https://firebase.google.com/docs/reference/js/auth.user\n        const uid = user.uid;\n        const email = user.email;\n        dispatch(logIn({\n          email: email,\n          id: uid\n        }));\n        setColumns(getInitialDataDB({\n          id: uid,\n          str: 'columns'\n        }));\n      } else {\n        // User is signed out\n        setColumns(getInitialDataLS('kanban-board-columns'));\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(DndContext, {\n    onDragStart: onDragStart,\n    onDragEnd: onDragEnd,\n    onDragOver: onDragOver,\n    sensors: sensors,\n    children: [user ? /*#__PURE__*/_jsxDEV(Header, {\n      handleLogOut: handleLogOut\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 15\n    }, this) : /*#__PURE__*/_jsxDEV(Popup, {\n      handleLogIn: handleLogIn,\n      handleCreatNewAccount: handleCreatNewAccount,\n      handleOpenClick: handleOpenClick,\n      handleCloseCLick: handleCloseCLick,\n      isOpen: isOpen,\n      isOpenLogIn: isOpenLogIn,\n      isOpenNewAccount: isOpenNewAccount,\n      handleOpenFormLogIn: handleOpenFormLogIn,\n      handleOpenFormNewAccount: handleOpenFormNewAccount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 56\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(SortableContext, {\n        items: columnsID,\n        children: columns.map(el => {\n          return /*#__PURE__*/_jsxDEV(Column, {\n            id: el.id,\n            name: el.name,\n            handleClick: handleClickDeleteColumn,\n            updateColumnName: updateColumnName,\n            handleAddTask: handleAddTask,\n            tasks: tasks.filter(task => task.idColumn === el.id),\n            handleDeleteTask: handleDeleteTask,\n            updateTask: updateTask\n          }, el.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 18\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        content: \"Add column\",\n        handleClick: handleClickAddColumn,\n        type: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), \" \", activeColumn ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), \" \", /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n  function handleCreatNewAccount({\n    email,\n    password\n  }) {\n    creatUser({\n      email,\n      password\n    }).then(user => {\n      console.log(user);\n      setIsOpenLogIn(true);\n      setIsOpenNewAccount(false);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n  function handleLogIn({\n    email,\n    password\n  }) {\n    logInUser({\n      email,\n      password\n    }).then(user => {\n      // setColumns([])\n      setIsOpenLogIn(false);\n      setIsOpen(false);\n      if (user.user) {\n        localStorage.setItem('kanban-token', JSON.stringify(user.user.accessToken));\n        dispatch(logIn({\n          email: email,\n          id: user.user.uid\n        }));\n      }\n    }).catch(err => {\n      console.log('catch', err);\n    });\n  }\n  function handleLogOut() {\n    signOutUser().then(() => {\n      // setColumns([])\n      dispatch(logOut());\n    }).catch();\n  }\n  function handleOpenClick() {\n    setIsOpen(true);\n  }\n  function handleCloseCLick() {\n    setIsOpen(false);\n    setIsOpenLogIn(false);\n    setIsOpenNewAccount(false);\n  }\n  function handleOpenFormLogIn(e) {\n    e.preventDefault();\n    setIsOpenNewAccount(false);\n    setIsOpenLogIn(true);\n  }\n  function handleOpenFormNewAccount(e) {\n    e.preventDefault();\n    setIsOpenLogIn(false);\n    setIsOpenNewAccount(true);\n  }\n  function getInitialDataDB({\n    id,\n    str\n  }) {\n    /// 'columns'  'tasks'\n    return getData({\n      userID: id,\n      category: str\n    }).then(snapshot => {\n      if (snapshot.exists()) {\n        console.log(snapshot.val());\n        return snapshot.val();\n      } else {\n        console.log(\"No data available\");\n        return [];\n      }\n    }).catch();\n  }\n  function getInitialDataLS(str) {\n    /// 'kanban-board-columns' 'kanban-board-tasks'\n    return JSON.parse(localStorage.getItem(str)) || [];\n  }\n  function addNewColumnDB({\n    userID,\n    column = 'column'\n  }) {\n    addNewColumn({\n      userID,\n      column\n    }).then(snapshot => {\n      if (snapshot.exists()) {\n        console.log('addNewColumnDB', snapshot.val());\n        return snapshot.val();\n      } else {\n        console.log(\"No snapshot in addNewColumnDB\");\n      }\n    }).catch();\n  }\n}\n_s(App, \"Tehdy1YHQP5J6KHW8kRbvE/C1tc=\", false, function () {\n  return [useSelector, useSensors, useSensor, useDispatch];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useMemo","useState","Header","Button","Column","Footer","Popup","DndContext","PointerSensor","useSensor","useSensors","SortableContext","arrayMove","logIn","logOut","selectUser","useDispatch","useSelector","getAuth","onAuthStateChanged","creatUser","logInUser","signOutUser","getData","addNewColumn","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","user","id","columns","setColumns","tasks","setTasks","JSON","parse","localStorage","getItem","console","log","isOpen","setIsOpen","isOpenLogIn","setIsOpenLogIn","isOpenNewAccount","setIsOpenNewAccount","handleClickAddColumn","addNewColumnDB","userID","state","Promise","resolve","then","name","length","Math","ceil","random","setItem","stringify","handleClickDeleteColumn","filteredColumns","filter","el","filteredTasks","task","idColumn","updateColumnName","input","update","map","handleAddTask","newTask","content","handleDeleteTask","updateTask","updatedTasks","columnsID","activeColumn","setActiveColumn","activeTask","setActiveTask","sensors","activationConstraint","distance","onDragStart","event","_event$active$data$cu","_event$active$data$cu2","active","data","current","type","onDragEnd","over","activeId","overId","draggindColumn","findIndex","overColumn","onDragOver","isActiveTask","isOverTask","activeIndex","overIndex","isOverColumn","dispatch","auth","uid","email","getInitialDataDB","str","getInitialDataLS","children","handleLogOut","fileName","_jsxFileName","lineNumber","columnNumber","handleLogIn","handleCreatNewAccount","handleOpenClick","handleCloseCLick","handleOpenFormLogIn","handleOpenFormNewAccount","className","items","handleClick","password","catch","err","accessToken","e","preventDefault","category","snapshot","exists","val","column","_c","$RefreshReg$"],"sources":["/Users/a1/projects/with mentor practice/kanban-board/src/components/App.js"],"sourcesContent":["import { useEffect, useMemo, useState } from 'react';\nimport '../blocks/app/app.css';\nimport Header from './Header';\nimport Button from './Button';\nimport Column from './Column';\nimport Footer from './Footer';\nimport Popup from './Popup';\nimport { DndContext, PointerSensor, useSensor, useSensors } from '@dnd-kit/core';\nimport {SortableContext, arrayMove} from '@dnd-kit/sortable';\n\nimport { logIn, logOut, selectUser } from '../context/user';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\nimport { creatUser, logInUser, signOutUser, getData, addNewColumn } from '../api/firebase';\n\nexport default function App() {\n\n  const {user, id} = useSelector(selectUser);  // initially check isAnyUserLogIN\n\n  const [columns, setColumns] = useState([]);\n  const [tasks, setTasks] = useState(JSON.parse(localStorage.getItem('kanban-board-tasks')) || []);\n\n  console.log(columns)\n\n  const [isOpen, setIsOpen] = useState(false); /// popup\n  const [isOpenLogIn, setIsOpenLogIn] = useState(false);\n  const [isOpenNewAccount, setIsOpenNewAccount] = useState(false);\n\n  async function handleClickAddColumn() {\n    if (user) {\n      addNewColumnDB({userID:id})\n    } else {\n      const state = new Promise(resolve => resolve('add'))\n     \n      await state\n      .then(()=>setColumns([...columns, {name: 'Column ' + (columns.length + 1), id: Math.ceil(Math.random()*100000)} ]))\n      .then(()=>localStorage.setItem('kanban-board-columns', JSON.stringify(columns)))\n    }\n  }\n\n  let handleClickDeleteColumn = (id) => {\n    const filteredColumns = columns.filter( el => el.id !== id)\n    const filteredTasks = tasks.filter(task => task.idColumn !== id)\n    setColumns(filteredColumns)\n    setTasks(filteredTasks)\n  }\n\n  let updateColumnName = ({id, input}) => {\n    const update = columns.map(el => {\n      if (el.id !== id)  return el\n      return {...el, name:input}\n    })\n    setColumns(update)\n  }\n\n  let handleAddTask = (id) => {\n    const newTask = {\n      idColumn: id,\n      id: Math.ceil(Math.random()*100000),\n      content: 'Task ' + (tasks.length + 1),\n    }\n    setTasks([...tasks, newTask])\n  }\n\n  let handleDeleteTask = (id) => {\n    const filteredTasks = tasks.filter(task => task.id !== id)\n    setTasks(filteredTasks)\n  }\n\n  let updateTask = ({id, input}) => {\n    const updatedTasks = tasks.map(task => {\n      if (task.id !== id) return task\n      return {...task, content:input}\n    })\n    setTasks(updatedTasks)\n  }\n\n  /// dnd-kit \n  const columnsID = useMemo(() => columns.map(el => el.id), [columns]);\n  const [activeColumn, setActiveColumn] = useState(null);\n  const [activeTask, setActiveTask] = useState(null);\n  //managing the area from where dnd starts to work, just move for this 'distance', to provide work other buttons\n  const sensors = useSensors(useSensor(PointerSensor, {\n    activationConstraint: {\n      distance: 3,\n    }\n  }));\n\n  function onDragStart(event) {\n    if (event.active.data.current?.type === 'column') {\n      setActiveColumn(event.active.data.current.id)\n      return\n    }\n    if (event.active.data.current?.type === 'task') {\n      setActiveTask(event.active.data.current.task)\n      return\n    }\n  }\n  function onDragEnd(event) {\n    setActiveTask(null)\n    setActiveColumn(null)\n\n    const {active,over} = event; /// {active, over}\n\n    if (!over) return\n    \n    const activeId = active.id;  /// active\n    const overId = over.id;\n\n    if ( activeId === overId) return\n\n    setColumns(columns => {\n      const draggindColumn = columns.findIndex(el => el.id === activeId)\n      const overColumn = columns.findIndex(el => el.id === overId)\n      return arrayMove(columns, draggindColumn, overColumn)\n    })\n  }\n  function onDragOver(event) {\n    const {active,over} = event; /// {active, over}\n\n    if (!over) return\n    \n    const activeId = active.id;  /// active\n    const overId = over.id;\n\n    if ( activeId === overId) return\n\n    if (!activeTask) return\n\n    const isActiveTask = active.data.current.type === 'task'\n    const isOverTask = over.data.current.type === 'task'\n    /// dropping a task over another task\n    if (isActiveTask && isOverTask) {\n      setTasks(tasks => {\n        const activeIndex = tasks.findIndex(el => el.id === activeId)\n        const overIndex = tasks.findIndex(el => el.id === overId)\n\n        tasks[activeIndex].idColumn = tasks[overIndex].idColumn\n\n        return arrayMove(tasks, activeIndex, overIndex)\n      })\n    }\n    /// dropping a task over am ampty other column\n    const isOverColumn = over.data.current.type === 'column';\n    setActiveColumn(null)\n\n    if (isActiveTask && isOverColumn) {\n      setTasks(tasks => {\n        const activeIndex = tasks.findIndex(el => el.id === activeId)\n\n        tasks[activeIndex].idColumn = overId\n\n        return arrayMove(tasks, activeIndex, activeIndex)\n      })\n    }\n  }\n  /// dnd-kit end\n\n\n  // useEffect(() => {\n  //   if (!user) localStorage.setItem('kanban-board-columns', JSON.stringify(columns));\n  // }, [columns, user])\n  // useEffect(() => {\n  //   localStorage.setItem('kanban-board-tasks', JSON.stringify(tasks));\n  // }, [tasks])\n  const dispatch = useDispatch();\n  const auth = getAuth();\n  useEffect(() => {\n    onAuthStateChanged(auth, (user) => {\n      if (user) {\n        // User is signed in, see docs for a list of available properties\n        // https://firebase.google.com/docs/reference/js/auth.user\n        const uid = user.uid;\n        const email = user.email;\n        dispatch(logIn({email:email,id:uid}))\n        setColumns(getInitialDataDB({id:uid, str:'columns'}))\n      } else {   // User is signed out\n        setColumns(getInitialDataLS('kanban-board-columns'))\n      } \n    });\n  },[])\n\n  return (\n    <DndContext onDragStart={onDragStart} onDragEnd={onDragEnd} onDragOver={onDragOver} sensors={sensors}>\n\n      {user ? <Header handleLogOut={handleLogOut} /> : <Popup \n      handleLogIn={handleLogIn} \n      handleCreatNewAccount={handleCreatNewAccount} \n      handleOpenClick={handleOpenClick} \n      handleCloseCLick={handleCloseCLick} \n      isOpen={isOpen} \n      isOpenLogIn={isOpenLogIn} \n      isOpenNewAccount={isOpenNewAccount} \n      handleOpenFormLogIn={handleOpenFormLogIn} \n      handleOpenFormNewAccount={handleOpenFormNewAccount} />}\n\n      <div className=\"app\">\n        <SortableContext items={columnsID}>\n        {columns.map(el => {\n          return <Column\n            key={el.id}\n            id={el.id}\n            name={el.name}\n            handleClick={handleClickDeleteColumn}\n            updateColumnName={updateColumnName}\n            handleAddTask={handleAddTask}\n            tasks={tasks.filter(task => task.idColumn === el.id )}\n            handleDeleteTask={handleDeleteTask}\n            updateTask={updateTask}\n          />\n        })}\n        </SortableContext>\n        \n        <Button   \n          content='Add column'\n          handleClick={handleClickAddColumn}\n          type='add'\n        />\n\n      </div>\n      {/* patch */} {activeColumn ? <></> : <></>} {/* patch end */}\n      <Footer />\n    </DndContext>\n  );\n\n  function handleCreatNewAccount({email,password}) {\n    creatUser({email, password})\n    .then(user => {\n      console.log(user)\n      setIsOpenLogIn(true)\n      setIsOpenNewAccount(false)\n    })\n    .catch(err => {\n      console.log(err)\n    })\n  }\n  function handleLogIn({email,password}) {\n    logInUser({email, password})\n    .then(user => {\n      // setColumns([])\n      setIsOpenLogIn(false)\n      setIsOpen(false)\n      if (user.user) {\n        localStorage.setItem('kanban-token', JSON.stringify(user.user.accessToken))\n        dispatch(logIn({email:email,id:user.user.uid}))\n      }\n    })\n    .catch(err => {\n      console.log('catch', err)\n    })\n  }\n  function handleLogOut() {\n    signOutUser()\n    .then(() => {\n      // setColumns([])\n      dispatch(logOut())\n    })\n    .catch()\n  }\n  function handleOpenClick() {\n    setIsOpen(true);\n  }\n  function handleCloseCLick() {\n    setIsOpen(false);\n    setIsOpenLogIn(false);\n    setIsOpenNewAccount(false);\n  }\n  function handleOpenFormLogIn(e) {\n    e.preventDefault();\n    setIsOpenNewAccount(false)\n    setIsOpenLogIn(true)\n  }\n  function handleOpenFormNewAccount(e) {\n    e.preventDefault();\n    setIsOpenLogIn(false)\n    setIsOpenNewAccount(true)\n  }\n\n  function getInitialDataDB({id, str}) {  /// 'columns'  'tasks'\n    return  getData({userID:id, category:str})\n      .then(snapshot => {\n        if (snapshot.exists()) {\n          console.log(snapshot.val());\n          return snapshot.val()\n        } else {\n          console.log(\"No data available\");\n          return []\n        }\n      })\n      .catch() \n  }\n  function getInitialDataLS(str) {  /// 'kanban-board-columns' 'kanban-board-tasks'\n    return (JSON.parse(localStorage.getItem(str)) || []);\n  }\n  function addNewColumnDB({userID, column='column'}) {\n    addNewColumn({userID, column})\n    .then(snapshot => {\n      if (snapshot.exists()) {\n        console.log('addNewColumnDB',snapshot.val());\n        return snapshot.val()\n      } else {\n        console.log(\"No snapshot in addNewColumnDB\");\n      }\n    })\n    .catch()\n  }\n}\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AACpD,OAAO,uBAAuB;AAC9B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,MAAM,SAAS;AAC3B,SAASC,UAAU,EAAEC,aAAa,EAAEC,SAAS,EAAEC,UAAU,QAAQ,eAAe;AAChF,SAAQC,eAAe,EAAEC,SAAS,QAAO,mBAAmB;AAE5D,SAASC,KAAK,EAAEC,MAAM,EAAEC,UAAU,QAAQ,iBAAiB;AAC3D,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,OAAO,EAAEC,kBAAkB,QAAQ,eAAe;AAC3D,SAASC,SAAS,EAAEC,SAAS,EAAEC,WAAW,EAAEC,OAAO,EAAEC,YAAY,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE3F,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAE5B,MAAM;IAACC,IAAI;IAAEC;EAAE,CAAC,GAAGf,WAAW,CAACF,UAAU,CAAC,CAAC,CAAE;;EAE7C,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACkC,KAAK,EAAEC,QAAQ,CAAC,GAAGnC,QAAQ,CAACoC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,oBAAoB,CAAC,CAAC,IAAI,EAAE,CAAC;EAEhGC,OAAO,CAACC,GAAG,CAACT,OAAO,CAAC;EAEpB,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAG3C,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC7C,MAAM,CAAC4C,WAAW,EAAEC,cAAc,CAAC,GAAG7C,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAAC8C,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG/C,QAAQ,CAAC,KAAK,CAAC;EAE/D,eAAegD,oBAAoBA,CAAA,EAAG;IACpC,IAAIlB,IAAI,EAAE;MACRmB,cAAc,CAAC;QAACC,MAAM,EAACnB;MAAE,CAAC,CAAC;IAC7B,CAAC,MAAM;MACL,MAAMoB,KAAK,GAAG,IAAIC,OAAO,CAACC,OAAO,IAAIA,OAAO,CAAC,KAAK,CAAC,CAAC;MAEpD,MAAMF,KAAK,CACVG,IAAI,CAAC,MAAIrB,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAE;QAACuB,IAAI,EAAE,SAAS,IAAIvB,OAAO,CAACwB,MAAM,GAAG,CAAC,CAAC;QAAEzB,EAAE,EAAE0B,IAAI,CAACC,IAAI,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAC,MAAM;MAAC,CAAC,CAAE,CAAC,CAAC,CAClHL,IAAI,CAAC,MAAIhB,YAAY,CAACsB,OAAO,CAAC,sBAAsB,EAAExB,IAAI,CAACyB,SAAS,CAAC7B,OAAO,CAAC,CAAC,CAAC;IAClF;EACF;EAEA,IAAI8B,uBAAuB,GAAI/B,EAAE,IAAK;IACpC,MAAMgC,eAAe,GAAG/B,OAAO,CAACgC,MAAM,CAAEC,EAAE,IAAIA,EAAE,CAAClC,EAAE,KAAKA,EAAE,CAAC;IAC3D,MAAMmC,aAAa,GAAGhC,KAAK,CAAC8B,MAAM,CAACG,IAAI,IAAIA,IAAI,CAACC,QAAQ,KAAKrC,EAAE,CAAC;IAChEE,UAAU,CAAC8B,eAAe,CAAC;IAC3B5B,QAAQ,CAAC+B,aAAa,CAAC;EACzB,CAAC;EAED,IAAIG,gBAAgB,GAAGA,CAAC;IAACtC,EAAE;IAAEuC;EAAK,CAAC,KAAK;IACtC,MAAMC,MAAM,GAAGvC,OAAO,CAACwC,GAAG,CAACP,EAAE,IAAI;MAC/B,IAAIA,EAAE,CAAClC,EAAE,KAAKA,EAAE,EAAG,OAAOkC,EAAE;MAC5B,OAAO;QAAC,GAAGA,EAAE;QAAEV,IAAI,EAACe;MAAK,CAAC;IAC5B,CAAC,CAAC;IACFrC,UAAU,CAACsC,MAAM,CAAC;EACpB,CAAC;EAED,IAAIE,aAAa,GAAI1C,EAAE,IAAK;IAC1B,MAAM2C,OAAO,GAAG;MACdN,QAAQ,EAAErC,EAAE;MACZA,EAAE,EAAE0B,IAAI,CAACC,IAAI,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAC,MAAM,CAAC;MACnCgB,OAAO,EAAE,OAAO,IAAIzC,KAAK,CAACsB,MAAM,GAAG,CAAC;IACtC,CAAC;IACDrB,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEwC,OAAO,CAAC,CAAC;EAC/B,CAAC;EAED,IAAIE,gBAAgB,GAAI7C,EAAE,IAAK;IAC7B,MAAMmC,aAAa,GAAGhC,KAAK,CAAC8B,MAAM,CAACG,IAAI,IAAIA,IAAI,CAACpC,EAAE,KAAKA,EAAE,CAAC;IAC1DI,QAAQ,CAAC+B,aAAa,CAAC;EACzB,CAAC;EAED,IAAIW,UAAU,GAAGA,CAAC;IAAC9C,EAAE;IAAEuC;EAAK,CAAC,KAAK;IAChC,MAAMQ,YAAY,GAAG5C,KAAK,CAACsC,GAAG,CAACL,IAAI,IAAI;MACrC,IAAIA,IAAI,CAACpC,EAAE,KAAKA,EAAE,EAAE,OAAOoC,IAAI;MAC/B,OAAO;QAAC,GAAGA,IAAI;QAAEQ,OAAO,EAACL;MAAK,CAAC;IACjC,CAAC,CAAC;IACFnC,QAAQ,CAAC2C,YAAY,CAAC;EACxB,CAAC;;EAED;EACA,MAAMC,SAAS,GAAGhF,OAAO,CAAC,MAAMiC,OAAO,CAACwC,GAAG,CAACP,EAAE,IAAIA,EAAE,CAAClC,EAAE,CAAC,EAAE,CAACC,OAAO,CAAC,CAAC;EACpE,MAAM,CAACgD,YAAY,EAAEC,eAAe,CAAC,GAAGjF,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACkF,UAAU,EAAEC,aAAa,CAAC,GAAGnF,QAAQ,CAAC,IAAI,CAAC;EAClD;EACA,MAAMoF,OAAO,GAAG3E,UAAU,CAACD,SAAS,CAACD,aAAa,EAAE;IAClD8E,oBAAoB,EAAE;MACpBC,QAAQ,EAAE;IACZ;EACF,CAAC,CAAC,CAAC;EAEH,SAASC,WAAWA,CAACC,KAAK,EAAE;IAAA,IAAAC,qBAAA,EAAAC,sBAAA;IAC1B,IAAI,EAAAD,qBAAA,GAAAD,KAAK,CAACG,MAAM,CAACC,IAAI,CAACC,OAAO,cAAAJ,qBAAA,uBAAzBA,qBAAA,CAA2BK,IAAI,MAAK,QAAQ,EAAE;MAChDb,eAAe,CAACO,KAAK,CAACG,MAAM,CAACC,IAAI,CAACC,OAAO,CAAC9D,EAAE,CAAC;MAC7C;IACF;IACA,IAAI,EAAA2D,sBAAA,GAAAF,KAAK,CAACG,MAAM,CAACC,IAAI,CAACC,OAAO,cAAAH,sBAAA,uBAAzBA,sBAAA,CAA2BI,IAAI,MAAK,MAAM,EAAE;MAC9CX,aAAa,CAACK,KAAK,CAACG,MAAM,CAACC,IAAI,CAACC,OAAO,CAAC1B,IAAI,CAAC;MAC7C;IACF;EACF;EACA,SAAS4B,SAASA,CAACP,KAAK,EAAE;IACxBL,aAAa,CAAC,IAAI,CAAC;IACnBF,eAAe,CAAC,IAAI,CAAC;IAErB,MAAM;MAACU,MAAM;MAACK;IAAI,CAAC,GAAGR,KAAK,CAAC,CAAC;;IAE7B,IAAI,CAACQ,IAAI,EAAE;IAEX,MAAMC,QAAQ,GAAGN,MAAM,CAAC5D,EAAE,CAAC,CAAE;IAC7B,MAAMmE,MAAM,GAAGF,IAAI,CAACjE,EAAE;IAEtB,IAAKkE,QAAQ,KAAKC,MAAM,EAAE;IAE1BjE,UAAU,CAACD,OAAO,IAAI;MACpB,MAAMmE,cAAc,GAAGnE,OAAO,CAACoE,SAAS,CAACnC,EAAE,IAAIA,EAAE,CAAClC,EAAE,KAAKkE,QAAQ,CAAC;MAClE,MAAMI,UAAU,GAAGrE,OAAO,CAACoE,SAAS,CAACnC,EAAE,IAAIA,EAAE,CAAClC,EAAE,KAAKmE,MAAM,CAAC;MAC5D,OAAOvF,SAAS,CAACqB,OAAO,EAAEmE,cAAc,EAAEE,UAAU,CAAC;IACvD,CAAC,CAAC;EACJ;EACA,SAASC,UAAUA,CAACd,KAAK,EAAE;IACzB,MAAM;MAACG,MAAM;MAACK;IAAI,CAAC,GAAGR,KAAK,CAAC,CAAC;;IAE7B,IAAI,CAACQ,IAAI,EAAE;IAEX,MAAMC,QAAQ,GAAGN,MAAM,CAAC5D,EAAE,CAAC,CAAE;IAC7B,MAAMmE,MAAM,GAAGF,IAAI,CAACjE,EAAE;IAEtB,IAAKkE,QAAQ,KAAKC,MAAM,EAAE;IAE1B,IAAI,CAAChB,UAAU,EAAE;IAEjB,MAAMqB,YAAY,GAAGZ,MAAM,CAACC,IAAI,CAACC,OAAO,CAACC,IAAI,KAAK,MAAM;IACxD,MAAMU,UAAU,GAAGR,IAAI,CAACJ,IAAI,CAACC,OAAO,CAACC,IAAI,KAAK,MAAM;IACpD;IACA,IAAIS,YAAY,IAAIC,UAAU,EAAE;MAC9BrE,QAAQ,CAACD,KAAK,IAAI;QAChB,MAAMuE,WAAW,GAAGvE,KAAK,CAACkE,SAAS,CAACnC,EAAE,IAAIA,EAAE,CAAClC,EAAE,KAAKkE,QAAQ,CAAC;QAC7D,MAAMS,SAAS,GAAGxE,KAAK,CAACkE,SAAS,CAACnC,EAAE,IAAIA,EAAE,CAAClC,EAAE,KAAKmE,MAAM,CAAC;QAEzDhE,KAAK,CAACuE,WAAW,CAAC,CAACrC,QAAQ,GAAGlC,KAAK,CAACwE,SAAS,CAAC,CAACtC,QAAQ;QAEvD,OAAOzD,SAAS,CAACuB,KAAK,EAAEuE,WAAW,EAAEC,SAAS,CAAC;MACjD,CAAC,CAAC;IACJ;IACA;IACA,MAAMC,YAAY,GAAGX,IAAI,CAACJ,IAAI,CAACC,OAAO,CAACC,IAAI,KAAK,QAAQ;IACxDb,eAAe,CAAC,IAAI,CAAC;IAErB,IAAIsB,YAAY,IAAII,YAAY,EAAE;MAChCxE,QAAQ,CAACD,KAAK,IAAI;QAChB,MAAMuE,WAAW,GAAGvE,KAAK,CAACkE,SAAS,CAACnC,EAAE,IAAIA,EAAE,CAAClC,EAAE,KAAKkE,QAAQ,CAAC;QAE7D/D,KAAK,CAACuE,WAAW,CAAC,CAACrC,QAAQ,GAAG8B,MAAM;QAEpC,OAAOvF,SAAS,CAACuB,KAAK,EAAEuE,WAAW,EAAEA,WAAW,CAAC;MACnD,CAAC,CAAC;IACJ;EACF;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA,MAAMG,QAAQ,GAAG7F,WAAW,CAAC,CAAC;EAC9B,MAAM8F,IAAI,GAAG5F,OAAO,CAAC,CAAC;EACtBnB,SAAS,CAAC,MAAM;IACdoB,kBAAkB,CAAC2F,IAAI,EAAG/E,IAAI,IAAK;MACjC,IAAIA,IAAI,EAAE;QACR;QACA;QACA,MAAMgF,GAAG,GAAGhF,IAAI,CAACgF,GAAG;QACpB,MAAMC,KAAK,GAAGjF,IAAI,CAACiF,KAAK;QACxBH,QAAQ,CAAChG,KAAK,CAAC;UAACmG,KAAK,EAACA,KAAK;UAAChF,EAAE,EAAC+E;QAAG,CAAC,CAAC,CAAC;QACrC7E,UAAU,CAAC+E,gBAAgB,CAAC;UAACjF,EAAE,EAAC+E,GAAG;UAAEG,GAAG,EAAC;QAAS,CAAC,CAAC,CAAC;MACvD,CAAC,MAAM;QAAI;QACThF,UAAU,CAACiF,gBAAgB,CAAC,sBAAsB,CAAC,CAAC;MACtD;IACF,CAAC,CAAC;EACJ,CAAC,EAAC,EAAE,CAAC;EAEL,oBACEzF,OAAA,CAACnB,UAAU;IAACiF,WAAW,EAAEA,WAAY;IAACQ,SAAS,EAAEA,SAAU;IAACO,UAAU,EAAEA,UAAW;IAAClB,OAAO,EAAEA,OAAQ;IAAA+B,QAAA,GAElGrF,IAAI,gBAAGL,OAAA,CAACxB,MAAM;MAACmH,YAAY,EAAEA;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAAG/F,OAAA,CAACpB,KAAK;MACvDoH,WAAW,EAAEA,WAAY;MACzBC,qBAAqB,EAAEA,qBAAsB;MAC7CC,eAAe,EAAEA,eAAgB;MACjCC,gBAAgB,EAAEA,gBAAiB;MACnClF,MAAM,EAAEA,MAAO;MACfE,WAAW,EAAEA,WAAY;MACzBE,gBAAgB,EAAEA,gBAAiB;MACnC+E,mBAAmB,EAAEA,mBAAoB;MACzCC,wBAAwB,EAAEA;IAAyB;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEtD/F,OAAA;MAAKsG,SAAS,EAAC,KAAK;MAAAZ,QAAA,gBAClB1F,OAAA,CAACf,eAAe;QAACsH,KAAK,EAAEjD,SAAU;QAAAoC,QAAA,EACjCnF,OAAO,CAACwC,GAAG,CAACP,EAAE,IAAI;UACjB,oBAAOxC,OAAA,CAACtB,MAAM;YAEZ4B,EAAE,EAAEkC,EAAE,CAAClC,EAAG;YACVwB,IAAI,EAAEU,EAAE,CAACV,IAAK;YACd0E,WAAW,EAAEnE,uBAAwB;YACrCO,gBAAgB,EAAEA,gBAAiB;YACnCI,aAAa,EAAEA,aAAc;YAC7BvC,KAAK,EAAEA,KAAK,CAAC8B,MAAM,CAACG,IAAI,IAAIA,IAAI,CAACC,QAAQ,KAAKH,EAAE,CAAClC,EAAG,CAAE;YACtD6C,gBAAgB,EAAEA,gBAAiB;YACnCC,UAAU,EAAEA;UAAW,GARlBZ,EAAE,CAAClC,EAAE;YAAAsF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OASX,CAAC;QACJ,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACe,CAAC,eAElB/F,OAAA,CAACvB,MAAM;QACLyE,OAAO,EAAC,YAAY;QACpBsD,WAAW,EAAEjF,oBAAqB;QAClC8C,IAAI,EAAC;MAAK;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEC,CAAC,EACO,GAAC,EAACxC,YAAY,gBAAGvD,OAAA,CAAAE,SAAA,mBAAI,CAAC,gBAAGF,OAAA,CAAAE,SAAA,mBAAI,CAAC,EAAC,GAAC,eAC7CF,OAAA,CAACrB,MAAM;MAAAiH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;EAGf,SAASE,qBAAqBA,CAAC;IAACX,KAAK;IAACmB;EAAQ,CAAC,EAAE;IAC/C/G,SAAS,CAAC;MAAC4F,KAAK;MAAEmB;IAAQ,CAAC,CAAC,CAC3B5E,IAAI,CAACxB,IAAI,IAAI;MACZU,OAAO,CAACC,GAAG,CAACX,IAAI,CAAC;MACjBe,cAAc,CAAC,IAAI,CAAC;MACpBE,mBAAmB,CAAC,KAAK,CAAC;IAC5B,CAAC,CAAC,CACDoF,KAAK,CAACC,GAAG,IAAI;MACZ5F,OAAO,CAACC,GAAG,CAAC2F,GAAG,CAAC;IAClB,CAAC,CAAC;EACJ;EACA,SAASX,WAAWA,CAAC;IAACV,KAAK;IAACmB;EAAQ,CAAC,EAAE;IACrC9G,SAAS,CAAC;MAAC2F,KAAK;MAAEmB;IAAQ,CAAC,CAAC,CAC3B5E,IAAI,CAACxB,IAAI,IAAI;MACZ;MACAe,cAAc,CAAC,KAAK,CAAC;MACrBF,SAAS,CAAC,KAAK,CAAC;MAChB,IAAIb,IAAI,CAACA,IAAI,EAAE;QACbQ,YAAY,CAACsB,OAAO,CAAC,cAAc,EAAExB,IAAI,CAACyB,SAAS,CAAC/B,IAAI,CAACA,IAAI,CAACuG,WAAW,CAAC,CAAC;QAC3EzB,QAAQ,CAAChG,KAAK,CAAC;UAACmG,KAAK,EAACA,KAAK;UAAChF,EAAE,EAACD,IAAI,CAACA,IAAI,CAACgF;QAAG,CAAC,CAAC,CAAC;MACjD;IACF,CAAC,CAAC,CACDqB,KAAK,CAACC,GAAG,IAAI;MACZ5F,OAAO,CAACC,GAAG,CAAC,OAAO,EAAE2F,GAAG,CAAC;IAC3B,CAAC,CAAC;EACJ;EACA,SAAShB,YAAYA,CAAA,EAAG;IACtB/F,WAAW,CAAC,CAAC,CACZiC,IAAI,CAAC,MAAM;MACV;MACAsD,QAAQ,CAAC/F,MAAM,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,CACDsH,KAAK,CAAC,CAAC;EACV;EACA,SAASR,eAAeA,CAAA,EAAG;IACzBhF,SAAS,CAAC,IAAI,CAAC;EACjB;EACA,SAASiF,gBAAgBA,CAAA,EAAG;IAC1BjF,SAAS,CAAC,KAAK,CAAC;IAChBE,cAAc,CAAC,KAAK,CAAC;IACrBE,mBAAmB,CAAC,KAAK,CAAC;EAC5B;EACA,SAAS8E,mBAAmBA,CAACS,CAAC,EAAE;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBxF,mBAAmB,CAAC,KAAK,CAAC;IAC1BF,cAAc,CAAC,IAAI,CAAC;EACtB;EACA,SAASiF,wBAAwBA,CAACQ,CAAC,EAAE;IACnCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB1F,cAAc,CAAC,KAAK,CAAC;IACrBE,mBAAmB,CAAC,IAAI,CAAC;EAC3B;EAEA,SAASiE,gBAAgBA,CAAC;IAACjF,EAAE;IAAEkF;EAAG,CAAC,EAAE;IAAG;IACtC,OAAQ3F,OAAO,CAAC;MAAC4B,MAAM,EAACnB,EAAE;MAAEyG,QAAQ,EAACvB;IAAG,CAAC,CAAC,CACvC3D,IAAI,CAACmF,QAAQ,IAAI;MAChB,IAAIA,QAAQ,CAACC,MAAM,CAAC,CAAC,EAAE;QACrBlG,OAAO,CAACC,GAAG,CAACgG,QAAQ,CAACE,GAAG,CAAC,CAAC,CAAC;QAC3B,OAAOF,QAAQ,CAACE,GAAG,CAAC,CAAC;MACvB,CAAC,MAAM;QACLnG,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;QAChC,OAAO,EAAE;MACX;IACF,CAAC,CAAC,CACD0F,KAAK,CAAC,CAAC;EACZ;EACA,SAASjB,gBAAgBA,CAACD,GAAG,EAAE;IAAG;IAChC,OAAQ7E,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC0E,GAAG,CAAC,CAAC,IAAI,EAAE;EACrD;EACA,SAAShE,cAAcA,CAAC;IAACC,MAAM;IAAE0F,MAAM,GAAC;EAAQ,CAAC,EAAE;IACjDrH,YAAY,CAAC;MAAC2B,MAAM;MAAE0F;IAAM,CAAC,CAAC,CAC7BtF,IAAI,CAACmF,QAAQ,IAAI;MAChB,IAAIA,QAAQ,CAACC,MAAM,CAAC,CAAC,EAAE;QACrBlG,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAACgG,QAAQ,CAACE,GAAG,CAAC,CAAC,CAAC;QAC5C,OAAOF,QAAQ,CAACE,GAAG,CAAC,CAAC;MACvB,CAAC,MAAM;QACLnG,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;MAC9C;IACF,CAAC,CAAC,CACD0F,KAAK,CAAC,CAAC;EACV;AACF;AAACtG,EAAA,CAnSuBD,GAAG;EAAA,QAENZ,WAAW,EAiEdP,UAAU,EAACD,SAAS,EAmFnBO,WAAW;AAAA;AAAA8H,EAAA,GAtJNjH,GAAG;AAAA,IAAAiH,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}